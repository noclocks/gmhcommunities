[
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\nAPI\n===\n\nEntrata provides a number of web services in our integrations with various third-party applications. In order to provide clear, example-rich view of our API, we've documented many elements below. You are welcome to review the web service information provided and visit our [Code Snippet](/api/v1/documentation/code-snippet) section for examples and references detailing our web services in several programming languages.\n\nPlease note that unless stated otherwise, all dates and times used in the API are assumed to be in Mountain Time (MST or MDT).\n\nThe Accept-Language request header parameter can be used to request that the values returned in the response be translated into the language and locale that is desired, provided that the language is active and enabled for the client. Possible values are: \\[ en-US, en-CA, en-GB, es-MX, es-PE, hi-IN, zh-CN, en-IE, es-US, es-ES, fr-FR, es-CL \\].\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n    This API will specify the API health status whether it is running or not.\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    Provides a library of functions to retrieve or send applications.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    This service will insert applications.\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    This service will insert or update the pets on an application. Please note that any applicable fees will also be applied based on the property fee structure.\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    Add Vehicle details to an application\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n    This service allows users to update the application.\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    Provides method to retrieve AR codes for a specified management company.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n    Returns all AR codes for a specified management company\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    Provides a library of functions to process electronic transactions.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n    Retrieves AR payments details with reference to a Payment ID and for a selected date range.\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    Provides a library of functions to retrieve or send resident transactions.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    This API is to get the information of Ar Invoices along with transactions and payments.\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    Retrieves a list of all transactions for a given lease\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    Retrieves list of all transactions for a given lease.\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n    Inserts lease AR transaction charges.\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n    Pulls the marketing contact type preferences for a customer and what they have opted in or out of. Note that for SMS, if the customer does not have a mobile number entered Entrata, no SMS preferences will be returned.\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    Provides a library of functions to retrieve or send customers information.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    Retrieves list of customers for a property. By default, this webservice returns residents where their lease status is Current or Notice.\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    Retrieves list of customer testimonials for a property.\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    Pick lists for Testimonials\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    Searches customers for a property.\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    Inserts resident reviews and ratings.\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    This service allows the user to update a customers' basic information. Requires the customer's lease status to be at least Applicant or above.\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    updateCustomerTestimonials\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    Provides a library of functions to retrieve or send financial information.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    This service will fetch job cost codes.\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    retrieve bank accounts for particular management company.\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    API pull's details of the budget from Entrata.\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    financial picklist\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    Returns all GL transactions for a property. By default the webservice returns summarized transactions.\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    Retrieves GL accounts information.\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    This service will fetch job categories\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    This service will fetch job cost budgets.\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    Returns the job details added on the jobCosting\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    Returns the transactionCustomTags and transactionRoutingTags\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    Marks the provided GL transactions as exported under the API export type. Does not impact being able to export the same transactions in other export types using other Entrata GL Export formats.\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    Inserts the Journal Entries.\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    Provides a library of functions to retrieve or send leads information.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    Apply quote to the application\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    Generates quotes for the application.\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    Pulls a list of Ids required for other lead services\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    Retrieves a list of leads of all status types. This web service uses Lead Management 3.0 MITS specifications.\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    Retrieves a list of prospect quotes from Entrata.\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    Inserts new Guest Card.\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    Inserts new Guest Cards. This web service uses Lead Management 3.0 MITS specifications. Please note that this service is being replaced by the sendLeads API and will eventually not be supported by Entrata.\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n    It is use to update the lead.\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    Provides a library of functions to retrieve or send leases information.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    Cancelling a lease which is in future status with unit and unit spaces associated with it.\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    Returns a list of expiring leases\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    Pulls list of lease documents.\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    Pulls the list of lease documents.\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    Pulls a list of Ids required for other leases services\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    Retrieves lease or application information. By default, this webservice returns leases that are in Current and Notice lease status. This endpoint is paginated, for pagination details check the response headers.\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    Retrieves the collection data.\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    Retrieves lease or application information.This web service uses Lease/Application 3.0 MITS specifications. By default, this webservice returns leases which are in Current and Notice lease status.\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    web service will return active as well as inactive packages.\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    moveOutLease\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    onNoticeLease\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    This API can be used to upload documents onto Entrata leases such as application, lease, policy, agreement documents. This API accepts files as a form file upload and the Content-Type should be \"multipart/form-data\". Please see the \"Code Snippet\" tab for more technical details and some sample code examples.\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    To insert the roommate groups.\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    sendScheduledCharges\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    This service allows the user to update the lease's basic required information and occupants.\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n    updateScheduledCharges\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    Provides a library of functions to retrieve or send work orders (maintenance requests) related information.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    We are fetching inspection templates based on the input provided in the request.\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    Pulls a list of Ids required for other workorder services\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    Retrieves work orders information.\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    Inserts new work orders.\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n    Update the work orders.\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    Provides a library of functions for retrieving pricing related information.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    Retrieves picklist of id/name for the \"CASCADE\", \"ORIGIN\" and \"TRIGGER\" from the company.\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    insertPricing allows updating pricing at a different level with multiple combinations. All nodes create a number of combinations and depending on the property setup API accepts the data. E.g If the property has the setup to accept term wise pricing then only API can accept the allowed terms under the node \"leaseTermMonths\". Please note that this API is designed for Conventional property type and may not work for other property types.\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n    sendBudgetedRent insert rates for unavailable units.\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    Provides a library of functions to retrieve property related information.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    getAmenityReservations\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    This API pulls information about the property calendar such as general staff and tour hours of operation, allowed length of appointments, and provides the open calendar time slots as per the dates.\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    Retrieves list of floor plans for a property.\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    Pulls a list of Pet types\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    Retrieves properties details for the management company.\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    Retrieves announcements associated to property.\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    Version R2 for getPropertyPickLists. Converted the parameters from attribute to Nodes.\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    Retrieves list of rentable items for a property.\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    getReservableAmenities\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    getWebSites\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    Insert the floorplans\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n    To insert the Rentable Items in to Entrata\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    Provides a library of functions to retrieve or send all property units related information.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    Pulls a list of Amenities\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    Retrieves property, floorplans, unit types, units, unit availability and pricing etc. information. This web service uses Property Marketing 3.0 MITS specifications. NOTE: For new projects, please do not use this service and instead use \"getPropertyUnits\" which is the updated version of this service but no longer supports the MITS standards.\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    Retrieves property, floorplans, unit types, units, unit availability and pricing, etc. information. If the property requested is a parent property with related child or phased properties then those properties will be found in subsequent pages and can be requested using the page specific URLs provided in the response headers.\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    Pulls a Specials/Concessions for the property passed.\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    Pulls a list of Unit availability and their pricing\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    Pulls a list of unit types. Rates returned are both active and web visible.\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    Insert the amenities.\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    Insert the property units/unit space and other the required details.\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n    This service allows user to update the amenities (property/floorplan/unit type/unit space).\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n    This service will return the data of the report. For 'queueId' user needs to execute the getReportData(r3) API.\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    Provides a library of functions to retrieve reports.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    This webservice will return 'queueId' that will be used in the getReponse API to pull the data for a specific report. Please use the getReportInfo webservice to get all the filters for a report. In order to run this webservice, you will have to provide the reportName along with all the filters for a report.\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    Returns information about a specific report. This will also return information about various filters associated with a report.\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n    This webservice returns list of all reports that are available for the reports API. This webservice will return the report name along with the system report name. Using the value from reportName field you will be able to get all the details about this report using the getReportInfo webservice.\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    Provides a library of functions to retrieve or send vendors related information.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    Fetch invoice batch for a vendor.\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    getPurchaseOrders\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    This web service returns Property management company vendors information and 1099 tax form data.\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    Pulls a list of VendorLocations\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    This web service will return pick list.\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    This service returns vendor records based on the vendorIds or vendorCodes provided.\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    Inserts invoice batch for a vendor.\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    This webservice allows you to update an existing invoice in Entrata.\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n    This webservice allows users to mark the AP Payments voided."
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/code-snippet",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n.prettyprint{ -moz-tab-size:0; -o-tab-size:0; tab-size:1;} .code\\_snippet\\_box\\_min\\_height { min-height:500px !important; } .xml\\_example\\_padding\\_border { padding: 0px !important; border: none !important; } .margin-top-15px{ margin-top: -15px; } .margin-top-30px{ margin-top: -30px; }\n\n[API](/api/v1/documentation) » Code Snippet\n===========================================\n\nUse the code snippets below to generate services compatible with Entrata' API in .NET, Java, or PHP.\n\n*   [.NET](javascript:void\\(0\\);)\n*   [Java](javascript:void\\(0\\);)\n*   [PHP](javascript:void\\(0\\);)\n\n  \n\n\t\t\t\n\t\t\t\t`/* An Example XML Request */ \t\t\t\t\tstring xmlRequest = ' \t\t\t\t\t<request> \t\t\t\t\t    <auth> \t\t\t\t\t        <type>basic</type> \t\t\t\t\t    </auth> \t\t\t\t\t    <method> \t\t\t\t\t        <name>required_service_name</name> \t\t\t\t\t        <params> \t\t\t\t\t            use the parameters required for the web service here \t\t\t\t\t        </params> \t\t\t\t\t    </method> \t\t\t\t\t</request>'; \t\t\t\t\t   \t\t\t\t\t/* An Example JSON Request */ \t\t\t\t \t\t\t\t\tstring jsonRequest = ' \t\t\t\t\t{ \t\t\t\t\t    \"auth\": { \t\t\t\t\t        \"type\" : \"basic\" \t\t\t\t\t    }, \t\t\t\t\t    \"method\": { \t\t\t\t\t        \"name\": \"required_service_name\", \t\t\t\t\t        \"params\": { \t\t\t\t\t            use the parameters required for the web service here \t\t\t\t\t        } \t\t\t\t\t    } \t\t\t\t\t}'; \t\t\t\t\t   \t\t\t\t \t\t\t\t/* Initiate a Web Request object */ \t\t\t\t\tHttpWebRequest webRequest = null;  \t\t\t\t\twebRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; \t\t\t\t\twebRequest.Method = 'POST'; \t\t\t\t\twebRequest.Headers.Add(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); \t\t\t\t\t   \t\t\t\t\t/* Initiate the request writer */ \t\t\t\t\tStreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream()); \t\t\t\t\t   \t\t\t\t\t/* If you want to send an XML Request, use these options */ \t\t\t\t\twebRequest.ContentType = 'APPLICATION/XML; CHARSET=UTF-8'; \t\t\t\t\trequestWriter.Write(xmlRequest); \t\t\t\t\t   \t\t\t\t\t/* If you want to send an XML Request, use these options */ \t\t\t\t\twebRequest.ContentType = 'APPLICATION/JSON; CHARSET=UTF-8'; \t\t\t\t\trequestWriter.Write(jsonRequest); \t\t\t\t\t   \t\t\t\t\trequestWriter.Close(); \t\t\t\t\t   \t\t\t\t\t/* Read the response */ \t\t\t\t\tStreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); \t\t\t\t\tstring responseData = responseReader.ReadToEnd(); \t\t\t\t\tresponseReader.Close();`\n\t\t\t\t\n\t\t\n\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t`/* An Example XML Request */ \t\t\t\t\t\tstring xmlRequest = ' \t\t\t\t\t\t\t\t<request> \t\t\t\t\t\t\t\t    <auth> \t\t\t\t\t\t\t\t        <type>basic</type> \t\t\t\t\t\t\t\t    </auth> \t\t\t\t\t\t\t\t    <method> \t\t\t\t\t\t\t\t        <name>required_service_name</name> \t\t\t\t\t\t\t\t        <params> \t\t\t\t\t\t\t\t            use the parameters required for the web service here \t\t\t\t\t\t\t\t        </params> \t\t\t\t\t\t\t\t    </method> \t\t\t\t\t\t\t\t</request>'; \t\t\t\t\t\t\t\t   \t\t\t\t\t\t\t\t/* An Example JSON Request */ \t\t\t\t\t\t\t\tstring jsonRequest = ' \t\t\t\t\t\t\t\t{ \t\t\t\t\t\t\t\t    \"auth\": { \t\t\t\t\t\t\t\t        \"type\" : \"basic\" \t\t\t\t\t\t\t\t    }, \t\t\t\t\t\t\t\t    \"method\": { \t\t\t\t\t\t\t\t        \"name\": \"required_service_name\", \t\t\t\t\t\t\t\t        \"params\": { \t\t\t\t\t\t\t\t            use the parameters required for the web service here \t\t\t\t\t\t\t\t        } \t\t\t\t\t\t\t\t    } \t\t\t\t\t\t\t\t}'; \t\t\t\t\t\t\t\timport java.io.InputStream; \t\t\t\t\t\t\t\timport org.apache.commons.httpclient.HttpClient;  \t\t\t\t\t\t\t\tpublic class PostExample { \t\t\t\t\t\t\t\t   \t\t\t\t\t\t\t\t    public static void main(String[] args){ \t\t\t\t\t\t\t\t   \t\t\t\t\t\t\t\t        HttpClient httpClient = new DefaultHttpClient();  \t\t\t\t\t\t\t\t        try { \t\t\t\t\t\t\t\t            HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); \t\t\t\t\t\t\t\t            request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); \t\t\t\t\t\t\t\t   \t\t\t\t\t\t\t\t            /* If you want to send an XML Request, use these options */ \t\t\t\t\t\t\t\t            StringEntity params = new StringEntity(xmlRequest); \t\t\t\t\t\t\t\t            request.addHeader(\"content-type\", \"APPLICATION/XML; CHARSET=UTF-8\"); \t\t\t\t\t\t\t\t            request.setEntity(params); \t\t\t\t\t\t\t\t   \t\t\t\t\t\t\t\t            /* If you want to send an JSON Request, use these options */ \t\t\t\t\t\t\t\t            StringEntity params = new StringEntity(jsonRequest); \t\t\t\t\t\t\t\t            request.addHeader(\"content-type\", \"APPLICATION/JSON; CHARSET=UTF-8\"); \t\t\t\t\t\t\t\t            request.setEntity(params); \t\t\t\t\t\t\t\t   \t\t\t\t\t\t\t\t            HttpResponse response = httpClient.execute(request); \t\t\t\t\t\t\t\t   \t\t\t\t\t\t\t\t            // handle response here... \t\t\t\t\t\t\t\t            System.out.println(response); \t\t\t\t\t\t\t\t        }catch (Exception ex) { \t\t\t\t\t\t\t\t            // handle exception here \t\t\t\t\t\t\t\t            ex.printStackTrace(); \t\t\t\t\t\t\t\t        } finally { \t\t\t\t\t\t\t\t            httpClient.getConnectionManager().shutdown(); \t\t\t\t\t\t\t\t        } \t\t\t\t\t\t\t\t    } \t\t\t\t\t\t\t\t}`\n\t\t\t\t\n\t\t\t\n\t\t\n\n\t\t\t\n\t\t\t\t`/* An Example XML Request */ \t\t\t\t\t$xmlRequest = '<request> \t\t\t\t\t\t\t\t\t    <auth> \t\t\t\t\t\t\t\t\t        <type>basic</type> \t\t\t\t\t\t\t\t\t    </auth> \t\t\t\t\t\t\t\t\t    <method> \t\t\t\t\t\t\t\t\t        <name>required_service_name</name> \t\t\t\t\t\t\t\t\t        <params> \t\t\t\t\t\t\t\t\t            use the parameters required for the web service here \t\t\t\t\t\t\t\t\t        </params> \t\t\t\t\t\t\t\t\t    </method> \t\t\t\t\t\t\t\t\t</request>'; \t\t\t\t\t\t\t\t   \t\t\t\t\t\t\t\t/* An Example JSON Request */ \t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t$jsonRequest = ' \t\t\t\t\t\t\t\t{ \t\t\t\t\t\t\t\t    \"auth\": { \t\t\t\t\t\t\t\t        \"type\" : \"basic\" \t\t\t\t\t\t\t\t    }, \t\t\t\t\t\t\t\t    \"method\": { \t\t\t\t\t\t\t\t        \"name\": \"required_service_name\", \t\t\t\t\t\t\t\t        \"params\": { \t\t\t\t\t\t\t\t            use the parameters required for the web service here \t\t\t\t\t\t\t\t        } \t\t\t\t\t\t\t\t    } \t\t\t\t\t\t\t\t}'; \t\t\t\t\t\t\t\t   \t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t/* Initiate a CURL resource */ \t\t\t\t\t\t\t\t$resCurl = curl_init(); \t\t\t\t\t\t\t\t   \t\t\t\t\t\t\t\t/* If you want to send an XML Request, use these options */ \t\t\t\t\t\t\t\tcurl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: APPLICATION/XML; CHARSET=UTF-8', 'Authorization: Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**' ) ); \t\t\t\t\t\t\t\tcurl_setopt( $resCurl, CURLOPT_POSTFIELDS, $xmlRequest ); \t\t\t\t\t\t\t\t   \t\t\t\t\t\t\t\t/* If you want to send a JSON Request, use these options */ \t\t\t\t\t\t\t\tcurl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: APPLICATION/JSON; CHARSET=UTF-8', 'Authorization: Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**' ) ); \t\t\t\t\t\t\t\tcurl_setopt( $resCurl, CURLOPT_POSTFIELDS, $jsonRequest ); \t\t\t\t\t\t\t\t   \t\t\t\t\t\t\t\tcurl_setopt( $resCurl, CURLOPT_POST, true ); \t\t\t\t\t\t\t\tcurl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); \t\t\t\t\t\t\t\tcurl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1); \t\t\t\t\t\t\t\t   \t\t\t\t\t\t\t\t$result = curl_exec( $resCurl ); \t\t\t\t\t\t\t\tif( false === $result ) { \t\t\t\t\t\t\t\t\t    echo 'Curl error: ' . curl_error( $resCurl ); \t\t\t\t\t\t\t\t\t    curl_close( $resCurl ); \t\t\t\t\t\t\t\t} else { \t\t\t\t\t\t\t\t\t    curl_close( $resCurl ); \t\t\t\t\t\t\t\t\t    echo $result; \t\t\t\t\t\t\t\t}`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getStatus",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [API Health](/api/v1/documentation/#API_Health) » [getStatus](#)\n===============================================================================================\n\n[getStatus](#)\n--------------\n\nThis API will specify the API health status whether it is running or not.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\nNo Parameters required.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/status\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\nNo Parameters required.\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getCompanyApplications",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Applications](/api/v1/documentation/#Applications) » [getCompanyApplications](#)\n================================================================================================================\n\n[getCompanyApplications](#)\n---------------------------\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/applications\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\n\\*\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/sendApplicantGeneralDetails",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Applications](/api/v1/documentation/#Applications) » [sendApplicantGeneralDetails](#)\n=====================================================================================================================\n\n[sendApplicantGeneralDetails](#)\n--------------------------------\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* applicationId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* applicantId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* id** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**isTrue** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value.\n\n**comments** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/applications\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/sendApplication",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Applications](/api/v1/documentation/#Applications) » [sendApplication](#)\n=========================================================================================================\n\n[sendApplication](#)\n--------------------\n\nThis service will insert applications.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* originatingLeadSourceId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**leasingAgentId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**unitSpaceId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**moveInDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value.\n\n**floorplanId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**leaseTermId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**applicationStatusId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Acceptable values are 3 (COMPLETED ) & 4 (APPLICATION\\_APPROVED )\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/applications\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/sendApplicationAddOns",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Applications](/api/v1/documentation/#Applications) » [sendApplicationAddOns](#)\n===============================================================================================================\n\n[sendApplicationAddOns](#)\n--------------------------\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\nNo Parameters required.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/applications\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/sendApplicationEmployers",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Applications](/api/v1/documentation/#Applications) » [sendApplicationEmployers](#)\n==================================================================================================================\n\n[sendApplicationEmployers](#)\n-----------------------------\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* applicationId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Required parameter, accepts integer value.\n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Required parameter, accepts integer value.\n\n**id** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Conditionally Required parameter. If provided, it will update the empl oyer record on provided application. otherwise insert the employer rec ord.\n\n**incomeTypeId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Conditionally Required parameter. If \"id\" is not provided, this parame ter is required.\n\n**customerId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Conditionally Required parameter. If \"id\" is not provided, this parame ter is required.\n\n**frequencyId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Optional parameter, accepts integer value. If provided should be a val id frequency range which are: 3 \\[ weekly \\], 4 \\[ Monthly \\] and 6 \\[ Yea rly \\]\n\n**position** \\[String\\]\n\nThis is an optional field. This field accepts single value. Optional parameter, accepts string value\n\n**institutionName** \\[String\\]\n\nThis is an optional field. This field accepts single value. Optional parameter, accepts string value\n\n**institutionPhoneNumber** \\[String\\]\n\nThis is an optional field. This field accepts single value. Optional parameter, accept string value. If provided, should be valid phone number.\n\n**institutionStreetLine1** \\[String\\]\n\nThis is an optional field. This field accepts single value. Optional parameter, accepts string value\n\n**institutionStreetLine2** \\[String\\]\n\nThis is an optional field. This field accepts single value. Optional parameter, accepts string value.\n\n**institutionStreetLine3** \\[String\\]\n\nThis is an optional field. This field accepts single value. Optional parameter, accepts string value.\n\n**institutionCity** \\[String\\]\n\nThis is an optional field. This field accepts single value. Optional parameter, accepts string value.\n\n**institutionStateCode** \\[String\\]\n\nThis is an optional field. This field accepts single value. Optional parameter, accepts string value.\n\n**institutionProvince** \\[String\\]\n\nThis is an optional field. This field accepts single value. Optional parameter, accepts string value\n\n**institutionPostalCode** \\[String\\]\n\nThis is an optional field. This field accepts single value. Optional parameter, accepts string value.\n\n**institutionCountryCode** \\[String\\]\n\nThis is an optional field. This field accepts single value. Optional parameter, accepts string value\n\n**amount** \\[Float\\]\n\nThis is an optional field. This field accepts single value. Conditionally Required parameter, accepts float value with two decimal points. If Id is not provided, this becomes required.\n\n**contactName** \\[String\\]\n\nThis is an optional field. This field accepts single value. Optional parameter, accepts string value\n\n**contactPhone** \\[String\\]\n\nThis is an optional field. This field accepts single value. Optional parameter, accept string value. If provided, should be valid phone number.\n\n**contactEmail** \\[String\\]\n\nThis is an optional field. This field accepts single value. Optional parameter, accept string value. If provided, should be valid email format.\n\n**incomeEffectiveDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. Optional parameter, accept date in MM/DD/YYYY or YYYY-MM-DD format .\n\n**dateStarted** \\[Date\\]\n\nThis is an optional field. This field accepts single value. Optional parameter, accept date in MM/DD/YYYY or YYYY-MM-DD format.\n\n**dateEnded** \\[Date\\]\n\nThis is an optional field. This field accepts single value. Optional parameter, accept date in MM/DD/YYYY or YYYY-MM-DD format. if provided, then dateStarted and dateEnded should be in valid range. da teStarted should be less than dateEnded.\n\n**isDelete** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. Optional parameter, accept either 1 or 0. if provided value as 1 then id is required and the employer record will be removed from applicatio n.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/applications\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/sendApplicationPets",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Applications](/api/v1/documentation/#Applications) » [sendApplicationPets](#)\n=============================================================================================================\n\n[sendApplicationPets](#)\n------------------------\n\nThis service will insert or update the pets on an application. Please note that any applicable fees will also be applied based on the property fee structure.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* applicationId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**id** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Optional parameter, accepts integer value. If provided we will update the pet record\n\n**customerId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Conditionally required. Accepts integer value. If id is not provided, this parameter is required\n\n**\\* typeId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**name** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**breed** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**gender** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**color** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**weight** \\[Float\\]\n\nThis is an optional field. This field accepts single value.\n\n**age** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**description** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**licenseCity** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**licenseNumber** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**isAssistanceAnimal** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value.\n\n**isPetSpayedOrNeutered** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value.\n\n**petSpayedOrNeuteredDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value.\n\n**isHouseBroken** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value.\n\n**specialProvisions** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**isDelete** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value.\n\n **status** \\[String\\]\n\n **message** \\[String\\]\n\n **id** \\[Integer\\]\n\n **customerId** \\[Integer\\]\n\n **typeId** \\[Integer\\]\n\n **node** \\[Integer\\]\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/applications\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/sendApplicationVehicles",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Applications](/api/v1/documentation/#Applications) » [sendApplicationVehicles](#)\n=================================================================================================================\n\n[sendApplicationVehicles](#)\n----------------------------\n\nAdd Vehicle details to an application\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* vehicleTypeId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Indicates the type of vehicle. Possible values are 1, 2, or 3 where 1 = Primary, 2 = Secondary, and 3 = Other.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/applications\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/updateApplication",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Applications](/api/v1/documentation/#Applications) » [updateApplication](#)\n===========================================================================================================\n\n[updateApplication](#)\n----------------------\n\nThis service allows users to update the application.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* applicationId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. This node accepts application id which needs to be updated.\n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. This node accepts the property id.\n\n**applicationStatusId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. This node accept the status id.\n\n**floorplanId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. This node accept the associated floorplan id or the floorplan which ne eds to be associated with the application.\n\n**unitSpaceId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. This node accept the associated unit space id or the unit space which needs to be associated with the application.\n\n**leaseTermId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. This node accepts the lease length.\n\n**leasingAgentId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. This node accepts the associated leasing agent or the leasing agent wh ich needs to be updated.\n\n**moveInDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. This node accepts the move-in date. In ISO format as well.\n\n**originatingLeadSourceId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. This node accepts the lead source id.\n\n**id** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. This node accepts the applicants' id.\n\n**firstName** \\[String\\]\n\nThis is an optional field. This field accepts single value. This node accepts the applicants' first name.\n\n**lastName** \\[String\\]\n\nThis is an optional field. This field accepts single value. This node accepts applicants' last name.\n\n**maternalName** \\[String\\]\n\nThis is an optional field. This field accepts single value. This node accepts applicants' maternal name.\n\n**preferredName** \\[String\\]\n\nThis is an optional field. This field accepts single value. This node accepts applicants' preferred name.\n\n**birthDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. This node accepts applicants' birth date. Supports ISO format.\n\n**customerRelationshipTypeId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. This node accepts customer relationship id.\n\n**email** \\[String\\]\n\nThis is an optional field. This field accepts single value. This node accepts the applicant's email.\n\n**phoneNumberTypeId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. This node accepts applicants' phone number type id. This is condition al mandatory node, if phoneNumber is provided then phoneNumberTypeId i s required.\n\n**phoneNumber** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. This node accepts applicants' phone number. This is conditional manda tory node, if value for phoneNumberTypeId is provided then this node i s required.\n\n**addressTypeId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. This node accepts address type id.\n\n**addressLine1** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**addressLine2** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**addressLine3** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**city** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**postalCode** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**stateCode** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n **status** \\[String\\]\n\n **message** \\[String\\]\n\n **applicationId** \\[Integer\\]\n\n **applicantIds** \\[Integer\\]\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/applications\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getArCodes",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [AR Codes](/api/v1/documentation/#AR_Codes) » [getArCodes](#)\n============================================================================================\n\n[getArCodes](#)\n---------------\n\nReturns all AR codes for a specified management company\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**propertyId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Provide a valid propertyid.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/arcodes\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\noptional\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getArPayments",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [AR Payments](/api/v1/documentation/#AR_Payments) » [getArPayments](#)\n=====================================================================================================\n\n[getArPayments](#)\n------------------\n\nRetrieves AR payments details with reference to a Payment ID and for a selected date range.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**arPaymentIds** \\[String\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. Comma separated ar payment ids.\n\n**paymentStatusTypeIds** \\[String\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. Comma separated payment status type ids.\n\n**fromDate** \\[date\\]\n\nThis is an optional field. This field accepts single value. From date.\n\n**toDate** \\[date\\]\n\nThis is an optional field. This field accepts single value. To date.\n\n**isIncludeAllocations** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. This node should include allocations details of payment\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/arpayments\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**arPaymentIds** \\[String\\]\n\noptional\n\n**paymentStatusTypeIds** \\[String\\]\n\noptional\n\n**fromDate** \\[date\\]\n\noptional\n\n**toDate** \\[date\\]\n\noptional\n\n**isIncludeAllocations** \\[Boolean\\]\n\nOff \n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getArInvoices",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [AR Transactions](/api/v1/documentation/#AR_Transactions) » [getArInvoices](#)\n=============================================================================================================\n\n[getArInvoices](#)\n------------------\n\nThis API is to get the information of Ar Invoices along with transactions and payments.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. propertyId\n\n**leaseIds** \\[String\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. leaseIds\n\n**arInvoiceId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. arInvoiceId\n\n**fromDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. fromDate\n\n**toDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. toDate\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/artransactions\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\n\\*\n\n**leaseIds** \\[String\\]\n\noptional\n\n**arInvoiceId** \\[Integer\\]\n\noptional\n\n**fromDate** \\[Date\\]\n\noptional\n\n**toDate** \\[Date\\]\n\noptional\n\n**Request URL Parameter:**\n\n**Page Number**\n\n**Page Size**\n\n**Request Header:**\n\n**Send Pagination Links in Response Body**\n\nOff \n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getLeaseArTransactions",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [AR Transactions](/api/v1/documentation/#AR_Transactions) » [getLeaseArTransactions](#)\n======================================================================================================================\n\n[getLeaseArTransactions](#)\n---------------------------\n\nRetrieves a list of all transactions for a given lease\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. PropertyId\n\n**leaseIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. leaseIds\n\n**leaseStatusTypeIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. If provided API returns data as per leaseStatusTypeIds, otherwise if N ot passed or passed as NULL/blank, returns all leases except canceled.\n\n**transactionTypeIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. Type of transactions on lease. Possible values 1-12\n\n**arCodeIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. arCodeIds\n\n**showFullLedger** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. This is parameter allows you to pull full ledger history. By default i t only returns open ledger items.\n\n**includeOtherIncomeLeases** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. This parameter is used to get the Other income leases in the response.\n\n**includeReversals** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. This parameter return reversal transactions in API response. Also to i nclude the reversal transaction in response 'showFullLedger' must be t rue(1).\n\n**transactionFromDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. This will return transactions starting from the provided date.\n\n**transactionToDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. This will return transaction till the provided date.\n\n**ledgerIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. These ids we will get from getFinancialPickList.\n\n**residentFriendlyMode** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value.\n\n **Id** \\[Integer\\]\n\nThis node shows leaseId, it comes under lease node.\n\n **PropertyId** \\[Integer\\]\n\nPropertyId\n\n **unitSpaceId** \\[Integer\\]\n\nThis node shows unitSpaceId associated with lease.\n\n **Id-customer** \\[Integer\\]\n\nThis node shows customerId, it comes under customer node\n\n **firstName** \\[String\\]\n\nThis node shows first name of the customer\n\n **lastName** \\[String\\]\n\nThis node shows last name of the customer.\n\n **Id-ledger** \\[Integer\\]\n\nThis node shows ledgerId, it comes under ledger node\n\n **name** \\[String\\]\n\nThis node shows name of the ledger.\n\n **balance** \\[Float\\]\n\nThis node shows balance amount of the ledger.\n\n **pastDueBalance** \\[Float\\]\n\nThis node shows due balance amount of the ledger.\n\n **writeOff** \\[Float\\]\n\nThis amount is calculated based on the trigger(BAD\\_DEBT\\_WRITE\\_OFF/BAD \\_DEBT\\_RECOVERY)\n\n **Id-transactions** \\[Integer\\]\n\nThis node shows transaction Id, it comes under transaction node\n\n **transactionTypeId** \\[Integer\\]\n\nThis return id for type of transaction. Same as mention in request.\n\n **arCodeId** \\[Integer\\]\n\narCodeId\n\n **arCodeName** \\[String\\]\n\nThis node shows name of the arCode.\n\n **leaseIntervalId** \\[Integer\\]\n\nleaseIntervalId\n\n **description** \\[String\\]\n\nThis node shows description provided for transaction.\n\n **transactionDate** \\[Date\\]\n\nThis node shows date of the transaction.\n\n **postDate** \\[Date\\]\n\nThis node shows posted date of transaction.\n\n **postMonth** \\[Date\\]\n\nThis node shows postMonth of transaction.\n\n **balanceDue** \\[Float\\]\n\nThis node shows amount due for the transaction.\n\n **amount** \\[Float\\]\n\nThis node shows transaction amount.\n\n **amountPaid** \\[Float\\]\n\nThis node shows transaction amount paid.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/artransactions\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\n\\*\n\n**leaseIds** \\[Integer\\]\n\noptional\n\n**leaseStatusTypeIds** \\[Integer\\]\n\noptional\n\n**transactionTypeIds** \\[Integer\\]\n\noptional\n\n**arCodeIds** \\[Integer\\]\n\noptional\n\n**showFullLedger** \\[Boolean\\]\n\nOff \n\n**includeOtherIncomeLeases** \\[Boolean\\]\n\nOff \n\n**includeReversals** \\[Boolean\\]\n\nOff \n\n**transactionFromDate** \\[Date\\]\n\noptional\n\n**transactionToDate** \\[Date\\]\n\noptional\n\n**ledgerIds** \\[Integer\\]\n\noptional\n\n**residentFriendlyMode** \\[Boolean\\]\n\nOff \n\n**Request URL Parameter:**\n\n**Page Number**\n\n**Page Size**\n\n**Request Header:**\n\n**Send Pagination Links in Response Body**\n\nOff \n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getMitsLeaseArTransactions",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [AR Transactions](/api/v1/documentation/#AR_Transactions) » [getMitsLeaseArTransactions](#)\n==========================================================================================================================\n\n[getMitsLeaseArTransactions](#)\n-------------------------------\n\nRetrieves list of all transactions for a given lease.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. propertyId\n\n**leaseId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. leaseId\n\n**leaseStatusTypeIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. If provided API returns data as per leaseStatusTypeIds, otherwise if N ot passed or passed as NULL/blank, returns all leases except canceled.\n\n**arCodeIds** \\[String\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. arCodeIds\n\n**showFullLedger** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. This is parameter allows you to pull full ledger history. By default i t only returns open ledger items.\n\n**includeReversals** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. This parameter return reversal transactions in API response. Also to i nclude the reversal transaction in response 'showFullLedger' must be true(1).\n\n**residentFriendlyMode** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. This is parameter allows you to pull ledger history as displayed under resident portal\n\n**includeOtherIncomeLeases** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. This parameter is used to get the Other income leases in the response.\n\n**includePaymentsOnly** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. This parameter is used to retrieve payments transactions in the respon se\n\n**transactionFromDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. transactionFromDate\n\n**transactionToDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. transactionToDate\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/artransactions\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\n\\*\n\n**leaseId** \\[Integer\\]\n\noptional\n\n**leaseStatusTypeIds** \\[Integer\\]\n\noptional\n\n**arCodeIds** \\[String\\]\n\noptional\n\n**showFullLedger** \\[Boolean\\]\n\nOff \n\n**includeReversals** \\[Boolean\\]\n\nOff \n\n**residentFriendlyMode** \\[Boolean\\]\n\nOff \n\n**includeOtherIncomeLeases** \\[Boolean\\]\n\nOff \n\n**includePaymentsOnly** \\[Boolean\\]\n\nOff \n\n**transactionFromDate** \\[Date\\]\n\noptional\n\n**transactionToDate** \\[Date\\]\n\noptional\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/sendLeaseArTransactionReversals",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [AR Transactions](/api/v1/documentation/#AR_Transactions) » [sendLeaseArTransactionReversals](#)\n===============================================================================================================================\n\n[sendLeaseArTransactionReversals](#)\n------------------------------------\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* TransactionId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. This ID represents the 'reference\\_id' provided in the sendLeaseArTrans actions response or the 'TransactionID' provided in getMitsLeaseArTran sactions.\n\n**\\* TransactionAmount** \\[Float\\]\n\nThis is a required field. This field accepts single value. The amount for which the original charge was posted. If the Original c harge was a negative charge, a credit, please send this amount as nega tive as well.\n\n**PropertyId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**ReverseDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. This is an optional parameter. If a date is sent in this parameter, we will set this value as postDate for the reversed transactions.\n\n**Description** \\[String\\]\n\nThis is an optional field. This field accepts single value. This is an optional parameter. We highly recommend that you provide a detailed description of the reason for which the charged is reversed.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/artransactions\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/sendLeaseArTransactions",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [AR Transactions](/api/v1/documentation/#AR_Transactions) » [sendLeaseArTransactions](#)\n=======================================================================================================================\n\n[sendLeaseArTransactions](#)\n----------------------------\n\nInserts lease AR transaction charges.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* transactionId** \\[String\\]\n\nThis is a required field. This field accepts single value. Unique Transaction ID of client system\n\n**\\* leaseId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Lease ID\n\n**\\* arCodeId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Ar Code ID\n\n**\\* transactionAmount** \\[Float\\]\n\nThis is a required field. This field accepts single value. Transaction Amount\n\n**\\* transactionDate** \\[date\\]\n\nThis is a required field. This field accepts single value. transactionDate\n\n**arPostMonth** \\[String\\]\n\nThis is an optional field. This field accepts single value. Charge Posting Month\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/artransactions\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getMarketingPreferencePickList",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Communications](/api/v1/documentation/#Communications) » [getMarketingPreferencePickList](#)\n============================================================================================================================\n\n[getMarketingPreferencePickList](#)\n-----------------------------------\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\nNo Parameters required.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/communications\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\nNo Parameters required.\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getMarketingPreferences",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Communications](/api/v1/documentation/#Communications) » [getMarketingPreferences](#)\n=====================================================================================================================\n\n[getMarketingPreferences](#)\n----------------------------\n\nPulls the marketing contact type preferences for a customer and what they have opted in or out of. Note that for SMS, if the customer does not have a mobile number entered Entrata, no SMS preferences will be returned.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* customerIds** \\[String\\]\n\nThis is a required field. This field accepts comma seperated multiple values. Customer Ids\n\n**\\* recipientTypeId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Possible values are 1 = Lead 2 = Resident\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/communications\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\n\\*\n\n**customerIds** \\[String\\]\n\n\\*\n\n**recipientTypeId** \\[Integer\\]\n\n\\*\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getCustomers",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Customers](/api/v1/documentation/#Customers) » [getCustomers](#)\n================================================================================================\n\n[getCustomers](#)\n-----------------\n\nRetrieves list of customers for a property. By default, this webservice returns residents where their lease status is Current or Notice.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Property Id\n\n**customerIds** \\[String\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. Customer Ids\n\n**leaseStatusTypeIds** \\[String\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. Lease Status types\n\n**isAgreedToTermsOnly** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. isAgreedToTermsOnly returns the date when a customer has agreed to the Terms and Conditions of Entrata resident portal\n\n**companyIdentificationTypeIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. company Identification type IDs\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/customers\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\n\\*\n\n**customerIds** \\[String\\]\n\noptional\n\n**leaseStatusTypeIds** \\[String\\]\n\noptional\n\n**isAgreedToTermsOnly** \\[Boolean\\]\n\nOff \n\n**companyIdentificationTypeIds** \\[Integer\\]\n\noptional\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getCustomerTestimonials",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Customers](/api/v1/documentation/#Customers) » [getCustomerTestimonials](#)\n===========================================================================================================\n\n[getCustomerTestimonials](#)\n----------------------------\n\nRetrieves list of customer testimonials for a property.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**propertyId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Property id\n\n**isApproved** \\[boolean\\]\n\nThis is an optional field. This field accepts single value. This fetches only approved testimonials\n\n**fromDate** \\[date\\]\n\nThis is an optional field. This field accepts single value. This will fetch the testimonials from this date\n\n**toDate** \\[date\\]\n\nThis is an optional field. This field accepts single value. This will fetch the testimonials until this date\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/customers\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\noptional\n\n**isApproved** \\[boolean\\]\n\nOff \n\n**fromDate** \\[date\\]\n\noptional\n\n**toDate** \\[date\\]\n\noptional\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getTestimonialPickLists",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Customers](/api/v1/documentation/#Customers) » [getTestimonialPickLists](#)\n===========================================================================================================\n\n[getTestimonialPickLists](#)\n----------------------------\n\nPick lists for Testimonials\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\nNo Parameters required.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/customers\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\nNo Parameters required.\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/searchCustomers",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Customers](/api/v1/documentation/#Customers) » [searchCustomers](#)\n===================================================================================================\n\n[searchCustomers](#)\n--------------------\n\nSearches customers for a property.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Property Id. This is system ID associated with each property.\n\n**\\* search** \\[String\\]\n\nThis is a required field. This field accepts single value. Search string accepts phone number, name, building, unit, secondary nu mber.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/customers\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\n\\*\n\n**search** \\[String\\]\n\n\\*\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/sendCustomerTestimonials",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Customers](/api/v1/documentation/#Customers) » [sendCustomerTestimonials](#)\n============================================================================================================\n\n[sendCustomerTestimonials](#)\n-----------------------------\n\nInserts resident reviews and ratings.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**CustomerId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Child element of Testimonial. Customer Id.\n\n**\\* TestimonialTypeId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. The following are valid testimonial type ids: 1 Resident testimonial 2 Employee testimonial 3 Client testimonial 4 Vacancy 5 Apartmentr atings.com 6 Yelp.com 7 atlanta.citysearch.com\n\n**Name** \\[String\\]\n\nThis is an optional field. This field accepts single value. Child element of Testimonial. Name of a person who submitted the testi monial.\n\n**\\* Title** \\[String\\]\n\nThis is a required field. This field accepts single value. Child element of Testimonial. Title of testimonial.\n\n**\\* Review** \\[String\\]\n\nThis is a required field. This field accepts single value. Child element of Testimonial. Review content.\n\n**RecommendToFriend** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. Child element of Testimonial. Do you recommend this property to any fr iend?.\n\n**\\* AuthorizeToShowOnCorporateSites** \\[Boolean\\]\n\nThis is a required field. This field accepts single value. Child element of Testimonial. Do you authorize property manager to dis play your testimonial on its portal and affiliate websites?.\n\n**\\* RatingTypeId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. The following are valid testimonial rating types ids: 1 Parking 2 No ise 3 Grounds 5 Construction 6 Maintenance 7 Staff 8 Overall\n\n**\\* Rating** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Child element of TestimonialRatings. Rating value.\n\n**AutoApproveForProspectPortal** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. Child element of Testimonial. Set to 1 if want to auto approve the tes timonial and post it on prospect portal.\n\n**AutoApproveForVacancy** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. Child element of Testimonial. Set to 1 if want to auto approve the tes timonial and post it on vacany.com\n\n**\\* PropertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Property Id\n\n**TestimonialDatetime** \\[Date\\]\n\nThis is an optional field. This field accepts single value. Testimonial submission date.\n\n**TransmissionVendorId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Transmission Vendor Id\n\n**Email** \\[String\\]\n\nThis is an optional field. This field accepts single value. Email will be required if CustomerId is not provided. Child element of Testimonial. Email of a person who submitted the testimonial.\n\n**PropertyResponse** \\[String\\]\n\nThis is an optional field. This field accepts single value. The property's response to the review.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/customers\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/updateCustomers",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Customers](/api/v1/documentation/#Customers) » [updateCustomers](#)\n===================================================================================================\n\n[updateCustomers](#)\n--------------------\n\nThis service allows the user to update a customers' basic information. Requires the customer's lease status to be at least Applicant or above.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* id** \\[Integer\\]\n\nThis is a required field. This field accepts single value. This should be the unique ID of the customer to be updated and they mu st be in at least an applicant or higher lease status.\n\n**firstName** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**lastName** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**namePrefix** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**middleName** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**maidenName** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**nameSuffix** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**email** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**birthDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value.\n\n**taxNumberTypeId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**taxNumber** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**addressTypeId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**streetLine1** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**streetLine2** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**streetLine3** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**city** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**country** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**state** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**postalCode** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**phoneNumberTypeId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**isPrimary** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**phoneNumber** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**companyIdentificationTypeId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**identificationValue** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**idExpirationDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value.\n\n**StateCode** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**countryCode** \\[String\\]\n\nThis is an optional field. This field accepts single value. 'countryCode' is accepted under 'companyIdentificationValue' node.\n\n **status** \\[String\\]\n\n **customerId** \\[Integer\\]\n\n **message** \\[String\\]\n\n **node** \\[Integer\\]\n\nValue for 'Node' defines the customer record number.\n\n **referenceId** \\[Integer\\]\n\nValue of 'referenceId' defines the Customers Id.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/customers\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/updateCustomerTestimonials",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Customers](/api/v1/documentation/#Customers) » [updateCustomerTestimonials](#)\n==============================================================================================================\n\n[updateCustomerTestimonials](#)\n-------------------------------\n\nupdateCustomerTestimonials\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* transmissionVendorId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**testimonialId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**\\* isPublished** \\[Boolean\\]\n\nThis is a required field. This field accepts single value.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/customers\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/updatePropertyResponse",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Customers](/api/v1/documentation/#Customers) » [updatePropertyResponse](#)\n==========================================================================================================\n\n[updatePropertyResponse](#)\n---------------------------\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* testimonialId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* reviewResponse** \\[String\\]\n\nThis is a required field. This field accepts single value.\n\n**isPublish** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. This node helps to publish the Response to Review directly from the AP I.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/customers\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getApCodes",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Financial](/api/v1/documentation/#Financial) » [getApCodes](#)\n==============================================================================================\n\n[getApCodes](#)\n---------------\n\nThis service will fetch job cost codes.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**glAccountIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values.\n\n**apCodeTypeIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. Currently supporting only job cost (3)\n\n **id** \\[Integer\\]\n\nThis will hold the apCategory id.\n\n **name** \\[Integer\\]\n\nThis will hold the apCategory name.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/financial\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**glAccountIds** \\[Integer\\]\n\noptional\n\n**apCodeTypeIds** \\[Integer\\]\n\noptional\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getBankAccounts",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Financial](/api/v1/documentation/#Financial) » [getBankAccounts](#)\n===================================================================================================\n\n[getBankAccounts](#)\n--------------------\n\nretrieve bank accounts for particular management company.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**bankAccountTypeId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Bank Account Type Identification Number\n\n**isCreditCardAccount** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/financial\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**bankAccountTypeId** \\[Integer\\]\n\noptional\n\n**isCreditCardAccount** \\[Boolean\\]\n\nOff \n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getBudgetActuals",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Financial](/api/v1/documentation/#Financial) » [getBudgetActuals](#)\n====================================================================================================\n\n[getBudgetActuals](#)\n---------------------\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. propertyId\n\n**\\* glTreeId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* budgetId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* postMonthFrom** \\[String\\]\n\nThis is a required field. This field accepts single value. MM/YYYY\n\n**\\* postMonthTo** \\[String\\]\n\nThis is a required field. This field accepts single value. MM/YYYY\n\n**glBookTypeIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. glBookTypeIds\n\n**budgetStatusTypeId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. budgetStatusTypeId\n\n**\\* accountingMethod** \\[String\\]\n\nThis is a required field. This field accepts single value. accountingMethod\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/financial\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\n\\*\n\n**glTreeId** \\[Integer\\]\n\n\\*\n\n**budgetId** \\[Integer\\]\n\n\\*\n\n**postMonthFrom** \\[String\\]\n\n\\*\n\n**postMonthTo** \\[String\\]\n\n\\*\n\n**glBookTypeIds** \\[Integer\\]\n\noptional\n\n**budgetStatusTypeId** \\[Integer\\]\n\noptional\n\n**accountingMethod** \\[String\\]\n\n\\*\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getBudgets",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Financial](/api/v1/documentation/#Financial) » [getBudgets](#)\n==============================================================================================\n\n[getBudgets](#)\n---------------\n\nAPI pull's details of the budget from Entrata.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyIds** \\[String\\]\n\nThis is a required field. This field accepts comma seperated multiple values. propertyIds\n\n**budgetIds** \\[String\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. budgetIds\n\n**budgetStatusTypeIds** \\[String\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. budgetStatusTypeIds\n\n**fiscalYears** \\[String\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. fiscalYears\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/financial\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyIds** \\[String\\]\n\n\\*\n\n**budgetIds** \\[String\\]\n\noptional\n\n**budgetStatusTypeIds** \\[String\\]\n\noptional\n\n**fiscalYears** \\[String\\]\n\noptional\n\n**Request URL Parameter:**\n\n**Page Number**\n\n**Page Size**\n\n**Request Header:**\n\n**Send Pagination Links in Response Body**\n\nOff \n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getFinancialPickList",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Financial](/api/v1/documentation/#Financial) » [getFinancialPickList](#)\n========================================================================================================\n\n[getFinancialPickList](#) Version 1 Version 2\n---------------------------------------------\n\nfinancial pick list\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n*   [Change Logs](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\nNo Parameters required.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/financial\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\nNo Parameters required.\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here\n\nVersion 2\n\n\\- We have removed the \"budget\" node from the response.   We now have a completely separate service for retrieving budgets called getBudgets.  \n  \n\\-  We have removed \"propertyId\" as a request parameter since we no longer pass property budgets in the response and there is no need to pass data by property ID anymore.  \n  \n\\-  We have added \"budgetStatusTypeIds\" node in the response.   These status type IDs can be used in getBudgets to fetch only the budgets that are in a certain status."
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getGlTransactions",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Financial](/api/v1/documentation/#Financial) » [getGlTransactions](#)\n=====================================================================================================\n\n[getGlTransactions](#)\n----------------------\n\nReturns all GL transactions for a property. By default the webservice returns summarized transactions.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyIds** \\[String\\]\n\nThis is a required field. This field accepts comma seperated multiple values.\n\n**glAccountFrom** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**glAccountTo** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**postMonthFrom** \\[Date\\]\n\nThis is an optional field. This field accepts single value. If no post month is provided, then the default post month of the prope rty will be used. If multiple properties are passed then the post mon th of any property would be used randomly.\n\n**postMonthTo** \\[Date\\]\n\nThis is an optional field. This field accepts single value.\n\n**postDateFrom** \\[Date\\]\n\nThis is an optional field. This field accepts single value.\n\n**postDateTo** \\[Date\\]\n\nThis is an optional field. This field accepts single value.\n\n**isCashBook** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value.\n\n**isDetailed** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value.\n\n**glTreeId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**glBookTypeIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values.\n\n**transactionDateFrom** \\[Date\\]\n\nThis is an optional field. This field accepts single value. This is the actual system created date of the transaction.\n\n**transactionDateTo** \\[Date\\]\n\nThis is an optional field. This field accepts single value. This is the actual system created date of the transaction.\n\n**excludeApTransactions** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. This flag will filter off any ap transactions from the response.\n\n**excludeArTransactions** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. This flag will filter off any Ar Transactions from the response.\n\n**excludeExportedTransactions** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. If passed as true (1) the API will not return any transaction that was previously marked exported using the markGlTransactionsExported API. Transaction exported under a different export format in Entrata wil l still qualify to be returned until specifically marked exported over the markGlTransactionsExported API.\n\n**lastUpdatedOnFromDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. This is the transaction modification date.\n\n**lastUpdatedOnToDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. This is the transaction modification date.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/financial\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyIds** \\[String\\]\n\n\\*\n\n**glAccountFrom** \\[Integer\\]\n\noptional\n\n**glAccountTo** \\[Integer\\]\n\noptional\n\n**postMonthFrom** \\[Date\\]\n\noptional\n\n**postMonthTo** \\[Date\\]\n\noptional\n\n**postDateFrom** \\[Date\\]\n\noptional\n\n**postDateTo** \\[Date\\]\n\noptional\n\n**isCashBook** \\[Boolean\\]\n\nOff \n\n**isDetailed** \\[Boolean\\]\n\nOff \n\n**glTreeId** \\[Integer\\]\n\noptional\n\n**glBookTypeIds** \\[Integer\\]\n\noptional\n\n**transactionDateFrom** \\[Date\\]\n\noptional\n\n**transactionDateTo** \\[Date\\]\n\noptional\n\n**excludeApTransactions** \\[Boolean\\]\n\nOff \n\n**excludeArTransactions** \\[Boolean\\]\n\nOff \n\n**excludeExportedTransactions** \\[Boolean\\]\n\nOff \n\n**lastUpdatedOnFromDate** \\[Date\\]\n\noptional\n\n**lastUpdatedOnToDate** \\[Date\\]\n\noptional\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getGlTrees",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Financial](/api/v1/documentation/#Financial) » [getGlTrees](#)\n==============================================================================================\n\n[getGlTrees](#)\n---------------\n\nRetrieves GL accounts information.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**propertyId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Property Id\n\n**glTreeId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Gl Tree Id\n\n**glBranchId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Gl Branch Id\n\n**glGroupTypeId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Gl Group Type Id\n\n**glTreeTypeId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Gl Tree Type Id\n\n**accountNumbers** \\[String\\]\n\nThis is an optional field. This field accepts comma seperated multiple values.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/financial\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\noptional\n\n**glTreeId** \\[Integer\\]\n\noptional\n\n**glBranchId** \\[Integer\\]\n\noptional\n\n**glGroupTypeId** \\[Integer\\]\n\noptional\n\n**glTreeTypeId** \\[Integer\\]\n\noptional\n\n**accountNumbers** \\[String\\]\n\noptional\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getJobCategories",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Financial](/api/v1/documentation/#Financial) » [getJobCategories](#)\n====================================================================================================\n\n[getJobCategories](#)\n---------------------\n\nThis service will fetch job categories\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**glAccountIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. This is the glAccount Id associated with job category\n\n **id** \\[Integer\\]\n\nId of the job category.\n\n **name** \\[String\\]\n\nName of the job category.\n\n **glAccountId** \\[Integer\\]\n\nglAccount id of the job category.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/financial\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**glAccountIds** \\[Integer\\]\n\noptional\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getJobCostBudgets",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Financial](/api/v1/documentation/#Financial) » [getJobCostBudgets](#)\n=====================================================================================================\n\n[getJobCostBudgets](#)\n----------------------\n\nThis service will fetch job cost budgets.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyIds** \\[Integer\\]\n\nThis is a required field. This field accepts comma seperated multiple values. This node should accept property Id.\n\n**jobIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. This node should accept job Id.\n\n**jobStatusIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. This node should accept job status Id.\n\n**apCodeIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. This node should accept apCode Id\n\n**jobPhaseId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. This node should accept job Phase Id\n\n **propertyId** \\[Integer\\]\n\nThis node should return the propertyId for which budget is returned.\n\n **jobId** \\[Integer\\]\n\nThis node should return jobId for which budget is returned.\n\n **jobStatusId** \\[Integer\\]\n\nThis node should return jobStatusId for which budget is returned.\n\n **jobPhaseId** \\[Integer\\]\n\nThis node should return jobPhaseId for which budget is returned.\n\n **jobPhaseName** \\[String\\]\n\nThis node should return job phase name for which budget is return\n\n **apCodeId** \\[Integer\\]\n\nThis node should retunr apCodeId on which budget is added.\n\n **apCodeName** \\[String\\]\n\nThis node should return apCodeName on which budget is associated.\n\n **unitTypeBudget** \\[Integer\\]\n\nThis node should return cost budget associated on the unit.\n\n **locationBudget** \\[Integer\\]\n\nThis node should return cost budget associated to property location.\n\n **generalBudget** \\[Integer\\]\n\nThis node should return general cost budget.\n\n **apDetailId** \\[Integer\\]\n\nThis node should return apDetailId of job cost on which budget is asso ciated..\n\n **postMonth** \\[Integer\\]\n\nThis node should return post month of job cost on which budget is asso ciated.\n\n **monthlyAmount** \\[Integer\\]\n\nThis node should return monthly amount of the post month associated wi th the budget.\n\n **unitTypeId** \\[Integer\\]\n\nThis node should return unitTypeId of the unit which is associated wit h job cost budget.\n\n **maintenanceLocationId** \\[Integer\\]\n\nThis node should return maintenanceLocationId of the property location which is associated with job cost budget.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/financial\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyIds** \\[Integer\\]\n\n\\*\n\n**jobIds** \\[Integer\\]\n\noptional\n\n**jobStatusIds** \\[Integer\\]\n\noptional\n\n**apCodeIds** \\[Integer\\]\n\noptional\n\n**jobPhaseId** \\[Integer\\]\n\noptional\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getJobs",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Financial](/api/v1/documentation/#Financial) » [getJobs](#)\n===========================================================================================\n\n[getJobs](#)\n------------\n\nReturns the job details added on the jobCosting\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. This node should accept the propertyId.\n\n**jobCategoryIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. This node should accept the jobCategoryIds\n\n**jobStatusIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. This node should accept the job statusIds.\n\n **id** \\[Integer\\]\n\nThis node should return the added Job Id.\n\n **name** \\[String\\]\n\nThis node should return the name of the added Job.\n\n **propertyId** \\[Integer\\]\n\nThis node should return the propertyId on which the job is added.\n\n **jobCategoryId** \\[Integer\\]\n\nThis node should return the jobCategoryId of the added job.\n\n **glAccountId** \\[Integer\\]\n\nThis node should return the glAccountId mapped with jobcategory.\n\n **jobStatusId** \\[Integer\\]\n\nThis node should return the jobStatusID of the added job.\n\n **jobStatus** \\[String\\]\n\nThis node should return the jobStaus name added for job.\n\n **jobPhases** \\[Integer\\]\n\nThis node should return the jobPhases added on the job. It would retur n id, name and budget\n\n **apContracts** \\[Integer\\]\n\nThis should return the contract added on the job.\n\n **apCodes** \\[Integer\\]\n\nThis should return the codes added on the contract for job.\n\n **plannedStartDate** \\[Date\\]\n\nThis node should return the plannedStartDate of job\n\n **plannedCompletionDate** \\[Date\\]\n\nThis node should return the plannedCompletionDate of Job.\n\n **actualStartDate** \\[Date\\]\n\nThis node should return the actual start date on which the job started .\n\n **actualCompletionDate** \\[Date\\]\n\nThis node should return the actual completion date on which the job en d.\n\n **budgetTotal** \\[Integer\\]\n\nThis node should return the total budget of the job Phases.\n\n **budget** \\[Integer\\]\n\nThis node should return the budget amount added to the individual jobP hase.\n\n **contractTotal** \\[Integer\\]\n\nThis node should return the contractTotal added to the job contract.\n\n **contractVendor** \\[String\\]\n\nThis node should return the vendor name of the contract.\n\n **changeOrderId** \\[Integer\\]\n\nThis node should return the changeOrderId of the contract. This node o nly returns in case of Approved changeOrderId.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/financial\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\n\\*\n\n**jobCategoryIds** \\[Integer\\]\n\noptional\n\n**jobStatusIds** \\[Integer\\]\n\noptional\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getTransactionTagLists",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Financial](/api/v1/documentation/#Financial) » [getTransactionTagLists](#)\n==========================================================================================================\n\n[getTransactionTagLists](#)\n---------------------------\n\nReturns the transactionCustomTags and transactionRoutingTags\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\nNo Parameters required.\n\n **id** \\[Integer\\]\n\nThis node return the Id of the tag.\n\n **name** \\[String\\]\n\nThis node return the name of the tag\n\n **code** \\[String\\]\n\nThis node return the code of the tag\n\n **isPublished** \\[Integer\\]\n\nThis node return boolean value 0 or 1.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/financial\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\nNo Parameters required.\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/markGlTransactionsExported",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Financial](/api/v1/documentation/#Financial) » [markGlTransactionsExported](#)\n==============================================================================================================\n\n[markGlTransactionsExported](#)\n-------------------------------\n\nMarks the provided GL transactions as exported under the API export type. Does not impact being able to export the same transactions in other export types using other Entrata GL Export formats.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* glDetailId** \\[Integer\\]\n\nThis is a required field. This field accepts comma seperated multiple values.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/financial\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/sendBudgets",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Financial](/api/v1/documentation/#Financial) » [sendBudgets](#)\n===============================================================================================\n\n[sendBudgets](#)\n----------------\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* budgetName** \\[String\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* fiscalYear** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* fiscalStartMonth** \\[Date\\]\n\nThis is a required field. This field accepts single value. Accepts fiscal start month in MM/YYYY format.\n\n**\\* fiscalEndMonth** \\[Date\\]\n\nThis is a required field. This field accepts single value. Accepts fiscal end month in MM/YYYY format.\n\n**\\* id** \\[Integer\\]\n\nThis is a required field. This field accepts single value. This node accepts GL account id.\n\n**\\* budgetMonth** \\[Date\\]\n\nThis is a required field. This field accepts single value. Accepts budget month in MM/YYYY format.\n\n**\\* amount** \\[Float\\]\n\nThis is a required field. This field accepts single value.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/financial\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/sendJournalEntries",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Financial](/api/v1/documentation/#Financial) » [sendJournalEntries](#)\n======================================================================================================\n\n[sendJournalEntries](#)\n-----------------------\n\nInserts the Journal Entries.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* glAccountId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**glHeaderTypeId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. If the value for glHeaderTypeId is not provided take default as Standa rd\n\n**reference** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**accountingMethod** \\[String\\]\n\nThis is an optional field. This field accepts single value. If not provided, the accounting method of \"Both\" is used.\n\n**\\* glBookId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**postDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. If not provided then the default date will be the current date. The pa st date is acceptable\n\n**postMonth** \\[Date\\]\n\nThis is an optional field. This field accepts single value. If not provided then the default will be the current post month. Past post month is acceptable\n\n**isReverse** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. By default value will be false.\n\n**reversePostMonth** \\[Date\\]\n\nThis is an optional field. This field accepts single value. Conditionally required. Based on 'isReverse' flag.\n\n**routingTagId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**notes** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**defaultPropertyUnitId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**defaultPropertyBuildingId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**defaultGlDimensionId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**memo** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**debitAmount** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Conditional Required. If the Credit amount is passed then this should be 0.\n\n**creditAmount** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Conditional Required. If Debit amount is passed this should be 0\n\n**unitSpaceId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**propertyUnitId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**propertyBuildingId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**glDimensionId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**defaultJobPhaseId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**defaultApContractId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**jobPhaseId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**apContractId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**apCodeId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/financial\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/updateBudgets",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Financial](/api/v1/documentation/#Financial) » [updateBudgets](#)\n=================================================================================================\n\n[updateBudgets](#)\n------------------\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* id** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* month** \\[Date\\]\n\nThis is a required field. This field accepts single value. Accepts budget month in MM/YYYY format.\n\n**\\* amount** \\[Float\\]\n\nThis is a required field. This field accepts single value.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/financial\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/applyQuote",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Leads](/api/v1/documentation/#Leads) » [applyQuote](#)\n======================================================================================\n\n[applyQuote](#)\n---------------\n\nApply quote to the application\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\nNo Parameters required.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/leads\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/generateQuotes",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Leads](/api/v1/documentation/#Leads) » [generateQuotes](#)\n==========================================================================================\n\n[generateQuotes](#)\n-------------------\n\nGenerates quotes for the application.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. This will fetch quotes associated with the property.\n\n**applicationId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. This will fetch quotes associated with the property and the applicatio n.\n\n**adjustmentsAndProvisionIds** \\[String\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. adjustmentsAndProvisionIds\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/leads\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getLeadEvents",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Leads](/api/v1/documentation/#Leads) » [getLeadEvents](#)\n=========================================================================================\n\n[getLeadEvents](#)\n------------------\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**applicationId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Conditionally required, If eventTypeIds and eventDates are not passed then applicationId is required.\n\n**eventTypeIds** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**eventDateFrom** \\[Date\\]\n\nThis is an optional field. This field accepts single value.\n\n**eventDateTo** \\[Date\\]\n\nThis is an optional field. This field accepts single value.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/leads\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\n\\*\n\n**applicationId** \\[Integer\\]\n\noptional\n\n**eventTypeIds** \\[String\\]\n\noptional\n\n**eventDateFrom** \\[Date\\]\n\noptional\n\n**eventDateTo** \\[Date\\]\n\noptional\n\n**Request URL Parameter:**\n\n**Page Number**\n\n**Page Size**\n\n**Request Header:**\n\n**Send Pagination Links in Response Body**\n\nOff \n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getLeadPickLists",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Leads](/api/v1/documentation/#Leads) » [getLeadPickLists](#)\n============================================================================================\n\n[getLeadPickLists](#) Version 1 Version 2\n-----------------------------------------\n\nPulls a list of Ids required for other lead services\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n*   [Change Logs](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. propertyId\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/leads\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\n\\*\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here\n\nVersion 2\n\n\\- Changed request parameter 'propertyIds' node to 'propertyId' and now accept only one property at a time.  This is because there are some picklist items that are provided that are unique to one property and not others.  \n\\- Made 'propertyId' parameter required because some picklist items returned are specific to property.  \n\\-Changed the way we return event results to be in attribute form instead of nodes.  For example in JSON:  \n  \n**Previously:**  \n\"EventResults\": { \"EventResult\": \\[ { \"name\": \"Cancelled\", \"Id\": 57024 },  \n  \n**Updated:**  \n\"eventResults\": { \"eventResult\": \\[ { \"@attributes\": { \"name\": \"Cancelled\", \"id\": \"57024\" } },"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getLeads",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Leads](/api/v1/documentation/#Leads) » [getLeads](#)\n====================================================================================\n\n[getLeads](#)\n-------------\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**leadId** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values.\n\n**name** \\[String\\]\n\nThis is an optional field. This field accepts single value. Accepts combination of Firstname & Lastname to filter leads depending on inputs.\n\n**telephone** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Accepts Primary/Work/Home/Mobile number as input.\n\n**email** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**leadStatusIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values.\n\n**psProductIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values.\n\n**includeDemographics** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value.\n\n**fromDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. Format: MM/DD/YYYY. Conditional Mandatory. This node should return the application on the mentioned date range.\n\n**toDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. Format: MM/DD/YYYY. Conditional Mandatory. This node should return the application on the mentioned date range.\n\n**createdOnDateFrom** \\[Date\\]\n\nThis is an optional field. This field accepts single value. Format MM/DD/YYYY. This node should return the actual application crea ted on the mentioned date range.\n\n**createdOnDateTo** \\[Date\\]\n\nThis is an optional field. This field accepts single value. Format MM/DD/YYYY. This node should return the actual application crea ted on the mentioned date range.\n\n**eventTypeIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. In the response, events will not be returned unless we pass specific E vent Type Id(s) in this node. Accepts comma-separated values with lim it 5.\n\n**eventDateFrom** \\[Date\\]\n\nThis is an optional field. This field accepts single value. Format: MM/DD/YYYY\n\n**eventDateTo** \\[Date\\]\n\nThis is an optional field. This field accepts single value. Format: MM/DD/YYYY\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/leads\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\n\\*\n\n**leadId** \\[Integer\\]\n\noptional\n\n**name** \\[String\\]\n\noptional\n\n**telephone** \\[Integer\\]\n\noptional\n\n**email** \\[String\\]\n\noptional\n\n**leadStatusIds** \\[Integer\\]\n\noptional\n\n**psProductIds** \\[Integer\\]\n\noptional\n\n**includeDemographics** \\[Boolean\\]\n\nOff \n\n**fromDate** \\[Date\\]\n\noptional\n\n**toDate** \\[Date\\]\n\noptional\n\n**createdOnDateFrom** \\[Date\\]\n\noptional\n\n**createdOnDateTo** \\[Date\\]\n\noptional\n\n**eventTypeIds** \\[Integer\\]\n\noptional\n\n**eventDateFrom** \\[Date\\]\n\noptional\n\n**eventDateTo** \\[Date\\]\n\noptional\n\n**Request URL Parameter:**\n\n**Page Number**\n\n**Page Size**\n\n**Request Header:**\n\n**Send Pagination Links in Response Body**\n\nOff \n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getMitsLeads",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Leads](/api/v1/documentation/#Leads) » [getMitsLeads](#)\n========================================================================================\n\n[getMitsLeads](#)\n-----------------\n\nRetrieves a list of leads of all status types. This web service uses Lead Management 3.0 MITS specifications.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Property Id\n\n**leadId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Application Id referring PSI system\n\n**name** \\[String\\]\n\nThis is an optional field. This field accepts single value. This field accepts a combination of Firstname & Lastname. If either of one is provided, leads matching with given input will be returned in the response.\n\n**telephone** \\[String\\]\n\nThis is an optional field. This field accepts single value. This field accepts Primary/Mobile/Home/Work number of prospect in any format\n\n**email** \\[String\\]\n\nThis is an optional field. This field accepts single value. This field accepts email address of prospect.\n\n**leadStatusIds** \\[String\\]\n\nThis is an optional field. This field accepts single value. leadStatusIds - comma seperated\n\n**psProductIds** \\[String\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. psProductIds - comma seperated\n\n**eventTypeIds** \\[String\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. eventTypeIds - comma seperated\n\n**sendUnitSpaces** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. sendUnitSpaces\n\n**\\* fromDateTime** \\[Date\\]\n\nThis is a required field. This field accepts single value. This is an conditionally mandatory field.If name or telephone or email or leadId is provided then fromDate is not required.\n\n**\\* toDateTime** \\[Date\\]\n\nThis is a required field. This field accepts single value. This is an conditionally mandatory field. If name or telephone or emai l or leadId is provided then toDate is not required.\n\n**eventDateFrom** \\[Date\\]\n\nThis is an optional field. This field accepts single value. eventDateFrom\n\n**eventDateTo** \\[Date\\]\n\nThis is an optional field. This field accepts single value. eventDateTo\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/leads\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\n\\*\n\n**leadId** \\[Integer\\]\n\noptional\n\n**name** \\[String\\]\n\noptional\n\n**telephone** \\[String\\]\n\noptional\n\n**email** \\[String\\]\n\noptional\n\n**leadStatusIds** \\[String\\]\n\noptional\n\n**psProductIds** \\[String\\]\n\noptional\n\n**eventTypeIds** \\[String\\]\n\noptional\n\n**sendUnitSpaces** \\[Boolean\\]\n\nOff \n\n**fromDateTime** \\[Date\\]\n\n\\*\n\n**toDateTime** \\[Date\\]\n\n\\*\n\n**eventDateFrom** \\[Date\\]\n\noptional\n\n**eventDateTo** \\[Date\\]\n\noptional\n\n**Request URL Parameter:**\n\n**Page Number**\n\n**Page Size**\n\n**Request Header:**\n\n**Send Pagination Links in Response Body**\n\nOff \n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getQuotes",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Leads](/api/v1/documentation/#Leads) » [getQuotes](#)\n=====================================================================================\n\n[getQuotes](#)\n--------------\n\nRetrieves a list of prospect quotes from Entrata.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. This will fetch quotes associated with the property.\n\n**applicationId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. This will fetch quotes associated with the property and the applicatio n.\n\n**leaseStartDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. Format: MM/DD/YYYY, YYYY-MM-DD, MM/DD/YY\n\n**quoteId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**includeExpiredQuotes** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. If pass value '1' then expired quotes should get returned in the respo nse.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/leads\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\n\\*\n\n**applicationId** \\[Integer\\]\n\noptional\n\n**leaseStartDate** \\[Date\\]\n\noptional\n\n**quoteId** \\[Integer\\]\n\noptional\n\n**includeExpiredQuotes** \\[Boolean\\]\n\nOff \n\n**Request URL Parameter:**\n\n**Page Number**\n\n**Page Size**\n\n**Request Header:**\n\n**Send Pagination Links in Response Body**\n\nOff \n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/sendLeads",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Leads](/api/v1/documentation/#Leads) » [sendLeads](#)\n=====================================================================================\n\n[sendLeads](#)\n--------------\n\nInserts new Guest Card.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. This is a required field. This field accepts a single integer value fo r Property ID.\n\n**subtypeId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. This node supports following subtypeId values, under event type 'Appoi ntment':- 453:\"Leasing Appointments\", 560:\"Self-Guided Tour\", 454:\" Tour\", 525:\"Virtual Tour\"\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/leads\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/sendMitsLeads",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Leads](/api/v1/documentation/#Leads) » [sendMitsLeads](#)\n=========================================================================================\n\n[sendMitsLeads](#)\n------------------\n\nInserts new Guest Cards. This web service uses Lead Management 3.0 MITS specifications. Please note that this service is being replaced by the sendLeads API and will eventually not be supported by Entrata.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Property id\n\n**doNotSendConfirmationEmail** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. Allows restricting the guest card confirmation emails to prospect/prop erty if set to 1.\n\n**isWaitList** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. When sent as 1, Units will be listed in waitlist.\n\n**\\* LastUpdateDate** \\[DateTime\\]\n\nThis is a required field. This field accepts single value. LastUpdateDate\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/leads\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/updateLeads",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Leads](/api/v1/documentation/#Leads) » [updateLeads](#)\n=======================================================================================\n\n[updateLeads](#) Version 1 Version 2\n------------------------------------\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Change Logs](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Accepts the property Id value.\n\n**\\* applicationId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Accept the Application\\_Id(Lead\\_Id), can be obtained from getLeads API.\n\n**eventId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Accepts the value for Event Id.\n\n**\\* typeId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Accepts the Event Type Id value under this node.\n\n**eventResultId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Value for event result id should be fetched from getLeadPickLists API. Depending on the Events this node should be considered mandatory.\n\n**subtypeId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. This node supports following subtypeId values, under event type 'Appoi ntment':- 453:\"Leasing Appointments\", 560:\"Self-Guided Tour\", 454:\" T our\", 525:\"Virtual Tour\". And under event type 'Tour':- 524:\"Self-Gui ded Tour\"\n\n**date** \\[Date\\]\n\nThis is an optional field. This field accepts single value. This is the event date. During cloning, all the lead event dates will be set to the current date.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/leads\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\nVersion 2\n\n\\- Fixed a few naming convention issues.  \n\\- We now support adding \"Note\" events which get added to the lead activity tab.  \n\\- We fixed the 'comment' node so that it doesn't add a new note every time.  Only the initial comment will be added/updated."
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/cancelLease",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Leases](/api/v1/documentation/#Leases) » [cancelLease](#)\n=========================================================================================\n\n[cancelLease](#)\n----------------\n\nCancelling a lease which is in future status with unit and unit spaces associated with it.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* leaseId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/leases\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\n\\*\n\n**leaseId** \\[Integer\\]\n\n\\*\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getEvictedLeases",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Leases](/api/v1/documentation/#Leases) » [getEvictedLeases](#)\n==============================================================================================\n\n[getEvictedLeases](#)\n---------------------\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Provide a valid propertyId.\n\n**evictionStartDateFrom** \\[Date\\]\n\nThis is an optional field. This field accepts single value. Provide a valid evictionStartDateFrom.\n\n**evictionStartDateTo** \\[Date\\]\n\nThis is an optional field. This field accepts single value. Provide a valid evictionStartDateTo.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/leases\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\n\\*\n\n**evictionStartDateFrom** \\[Date\\]\n\noptional\n\n**evictionStartDateTo** \\[Date\\]\n\noptional\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getExpiringLeases",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Leases](/api/v1/documentation/#Leases) » [getExpiringLeases](#)\n===============================================================================================\n\n[getExpiringLeases](#)\n----------------------\n\nReturns a list of expiring leases\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Property Id\n\n**fromDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. Date from which leases are required\n\n**\\* toDate** \\[Date\\]\n\nThis is a required field. This field accepts single value. Date upto which leases are required\n\n**isMonthToMonth** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. Is Month To Month\n\n**showNoticeLeasesOnly** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. If this parameter is enabled then we will show leases with lease type status notice and the property setting HIDE\\_NOTICE\\_RESIDENTS\\_FROM\\_RENE WALS should be disabled for this, else we will return error.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/leases\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\n\\*\n\n**fromDate** \\[Date\\]\n\noptional\n\n**toDate** \\[Date\\]\n\n\\*\n\n**isMonthToMonth** \\[Boolean\\]\n\nOff \n\n**showNoticeLeasesOnly** \\[Boolean\\]\n\nOff \n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getLeaseDetails",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Leases](/api/v1/documentation/#Leases) » [getLeaseDetails](#)\n=============================================================================================\n\n[getLeaseDetails](#) Version 1 Version 2\n----------------------------------------\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n*   [Change Logs](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**leaseId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**leaseStatusTypeIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values.\n\n**includeAddOns** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value.\n\n**includeCharge** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/leases\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\n\\*\n\n**leaseId** \\[Integer\\]\n\noptional\n\n**leaseStatusTypeIds** \\[Integer\\]\n\noptional\n\n**includeAddOns** \\[Boolean\\]\n\nOff \n\n**includeCharge** \\[Boolean\\]\n\nOff \n\n**Request URL Parameter:**\n\n**Page Number**\n\n**Page Size**\n\n**Request Header:**\n\n**Send Pagination Links in Response Body**\n\nOff \n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here\n\nVersion 2\n\n\\-Made the \"leaseId\" request field optional.  \n\\-Added pagination  \n\\-Added new request node: 'leaseStatusTypeIds' which is optional.  \n\\-By default we now send only records for 'Current' and 'Notice' leases unless specified otherwise using 'leaseStatusTypeIds'"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getLeaseDocuments",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Leases](/api/v1/documentation/#Leases) » [getLeaseDocuments](#)\n===============================================================================================\n\n[getLeaseDocuments](#)\n----------------------\n\nPulls list of lease documents.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Property Id\n\n**leaseId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Lease Id - Required if externalLeaseId is not provided\n\n**externalLeaseId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. The remote primary key which is associated to lease. Required if leas eId is not provided.\n\n**documentIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values.\n\n**fileTypesCode** \\[String\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. System code for file files\n\n**addedOnFromDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. If provided, this will return the documents which have AddedOn dates o n or after the date provided.\n\n**showDeletedFile** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. If this flag is Yes then we are returning deleted documents else not.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/leases\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\n\\*\n\n**leaseId** \\[Integer\\]\n\noptional\n\n**externalLeaseId** \\[Integer\\]\n\noptional\n\n**documentIds** \\[Integer\\]\n\noptional\n\n**fileTypesCode** \\[String\\]\n\noptional\n\n**addedOnFromDate** \\[Date\\]\n\noptional\n\n**showDeletedFile** \\[Boolean\\]\n\nOff \n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getLeaseDocumentsList",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Leases](/api/v1/documentation/#Leases) » [getLeaseDocumentsList](#)\n===================================================================================================\n\n[getLeaseDocumentsList](#)\n--------------------------\n\nPulls the list of lease documents.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Property Id\n\n**leaseId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**externalLeaseId** \\[String\\]\n\nThis is an optional field. This field accepts single value. This is the remote primary key that is associated to lease.\n\n**fileTypesCode** \\[String\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. System code for file files\n\n**showDeletedFile** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. If this flag is Yes then we are returning deleted documents else not.\n\n**leaseStatusTypeIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values.\n\n **leaseId** \\[Integer\\]\n\nThis node should return the leaseId of the document.\n\n **externalLeaseId** \\[Integer\\]\n\nThis node should return the remote primary key associate with the leas e.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/leases\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\n\\*\n\n**leaseId** \\[Integer\\]\n\noptional\n\n**externalLeaseId** \\[String\\]\n\noptional\n\n**fileTypesCode** \\[String\\]\n\noptional\n\n**showDeletedFile** \\[Boolean\\]\n\nOff \n\n**leaseStatusTypeIds** \\[Integer\\]\n\noptional\n\n**Request URL Parameter:**\n\n**Page Number**\n\n**Page Size**\n\n**Request Header:**\n\n**Send Pagination Links in Response Body**\n\nOff \n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getLeasePickList",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Leases](/api/v1/documentation/#Leases) » [getLeasePickList](#)\n==============================================================================================\n\n[getLeasePickList](#)\n---------------------\n\nPulls a list of Ids required for other leases services\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\nNo Parameters required.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/leases\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\nNo Parameters required.\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getLeases",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Leases](/api/v1/documentation/#Leases) » [getLeases](#)\n=======================================================================================\n\n[getLeases](#) Version 1 Version 2\n----------------------------------\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n*   [Change Logs](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**applicationId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**customerId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**leaseStatusTypeIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values.\n\n**leaseIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values.\n\n**scheduledArCodeIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values.\n\n**unitNumber** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**buildingName** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**moveInDateFrom** \\[Date\\]\n\nThis is an optional field. This field accepts single value.\n\n**moveInDateTo** \\[Date\\]\n\nThis is an optional field. This field accepts single value.\n\n**leaseExpiringDateFrom** \\[Date\\]\n\nThis is an optional field. This field accepts single value.\n\n**leaseExpiringDateTo** \\[Date\\]\n\nThis is an optional field. This field accepts single value.\n\n**moveOutDateFrom** \\[Date\\]\n\nThis is an optional field. This field accepts single value.\n\n**moveOutDateTo** \\[Date\\]\n\nThis is an optional field. This field accepts single value.\n\n**includeOtherIncomeLeases** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value.\n\n**residentFriendlyMode** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value.\n\n**includeLeaseHistory** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value.\n\n**includeArTransactions** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. This should return the Ar Transactions associated with the lease.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/leases\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\n\\*\n\n**applicationId** \\[Integer\\]\n\noptional\n\n**customerId** \\[Integer\\]\n\noptional\n\n**leaseStatusTypeIds** \\[Integer\\]\n\noptional\n\n**leaseIds** \\[Integer\\]\n\noptional\n\n**scheduledArCodeIds** \\[Integer\\]\n\noptional\n\n**unitNumber** \\[String\\]\n\noptional\n\n**buildingName** \\[String\\]\n\noptional\n\n**moveInDateFrom** \\[Date\\]\n\noptional\n\n**moveInDateTo** \\[Date\\]\n\noptional\n\n**leaseExpiringDateFrom** \\[Date\\]\n\noptional\n\n**leaseExpiringDateTo** \\[Date\\]\n\noptional\n\n**moveOutDateFrom** \\[Date\\]\n\noptional\n\n**moveOutDateTo** \\[Date\\]\n\noptional\n\n**includeOtherIncomeLeases** \\[Boolean\\]\n\nOff \n\n**residentFriendlyMode** \\[Boolean\\]\n\nOff \n\n**includeLeaseHistory** \\[Boolean\\]\n\nOff \n\n**includeArTransactions** \\[Boolean\\]\n\nOff \n\n**Request URL Parameter:**\n\n**Page Number**\n\n**Page Size**\n\n**Request Header:**\n\n**Send Pagination Links in Response Body**\n\nOff \n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here\n\nVersion 2\n\n1\\. Added moveOutReason node in main API response.  \n2\\. Split out the unit space details for multi-space leases in API response.  \n3\\. Replaced leaseActivities node with leaseInterval node with some relevant dates.  \n4\\. Included application related schedule charges as well in API Response.  \n5\\. Corrected the logic of the moveOutDateFrom filter to properly validate the move out dates of the leases and only return the leases that qualify as having moved out or will be moving out on or after the provided date."
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getMitsCollections",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Leases](/api/v1/documentation/#Leases) » [getMitsCollections](#)\n================================================================================================\n\n[getMitsCollections](#)\n-----------------------\n\nRetrieves the collection data.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Property Id\n\n**includeEvictions** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. Include Evictions leases\n\n**fromDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. From Date\n\n**transactionFromDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. transactionFromDate\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/leases\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\n\\*\n\n**includeEvictions** \\[Boolean\\]\n\nOff \n\n**fromDate** \\[Date\\]\n\noptional\n\n**transactionFromDate** \\[Date\\]\n\noptional\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getMitsLeases",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Leases](/api/v1/documentation/#Leases) » [getMitsLeases](#)\n===========================================================================================\n\n[getMitsLeases](#)\n------------------\n\nRetrieves lease or application information.This web service uses Lease/Application 3.0 MITS specifications. By default, this webservice returns leases which are in Current and Notice lease status.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[String\\]\n\nThis is a required field. This field accepts single value. Property id\n\n**customerId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. customerId\n\n**buildingName** \\[String\\]\n\nThis is an optional field. This field accepts single value. Filter leases on the basis of building name\n\n**unitNumber** \\[String\\]\n\nThis is an optional field. This field accepts single value. Filters the lease on the basis of unit number\n\n**leaseStatusTypeIds** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**scheduledArCodeIds** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. scheduledArCodeIds\n\n**moveInDateFrom** \\[Date\\]\n\nThis is an optional field. This field accepts single value.\n\n**moveInDateTo** \\[Date\\]\n\nThis is an optional field. This field accepts single value.\n\n**leaseExpiringDateFrom** \\[Date\\]\n\nThis is an optional field. This field accepts single value.\n\n**leaseExpiringDateTo** \\[Date\\]\n\nThis is an optional field. This field accepts single value.\n\n**moveOutDateFrom** \\[Date\\]\n\nThis is an optional field. This field accepts single value.\n\n**moveOutDateTo** \\[Date\\]\n\nThis is an optional field. This field accepts single value.\n\n**includeLeaseHistory** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value.\n\n**sendUnitSpaces** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value.\n\n**includeOtherIncomeLeases** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value.\n\n**residentFriendlyMode** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value.\n\n**preLeaseOnly** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. This flag shows the Pre-Leases information as implemented in Pre-Lease Report. When passed with value 1, we are considering a ll the lease status types.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/leases\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[String\\]\n\n\\*\n\n**customerId** \\[Integer\\]\n\noptional\n\n**buildingName** \\[String\\]\n\noptional\n\n**unitNumber** \\[String\\]\n\noptional\n\n**leaseStatusTypeIds** \\[Integer\\]\n\noptional\n\n**scheduledArCodeIds** \\[Integer\\]\n\noptional\n\n**moveInDateFrom** \\[Date\\]\n\noptional\n\n**moveInDateTo** \\[Date\\]\n\noptional\n\n**leaseExpiringDateFrom** \\[Date\\]\n\noptional\n\n**leaseExpiringDateTo** \\[Date\\]\n\noptional\n\n**moveOutDateFrom** \\[Date\\]\n\noptional\n\n**moveOutDateTo** \\[Date\\]\n\noptional\n\n**includeLeaseHistory** \\[Boolean\\]\n\nOff \n\n**sendUnitSpaces** \\[Boolean\\]\n\nOff \n\n**includeOtherIncomeLeases** \\[Boolean\\]\n\nOff \n\n**residentFriendlyMode** \\[Boolean\\]\n\nOff \n\n**preLeaseOnly** \\[Boolean\\]\n\nOff \n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getParcelAlerts",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Leases](/api/v1/documentation/#Leases) » [getParcelAlerts](#)\n=============================================================================================\n\n[getParcelAlerts](#)\n--------------------\n\nweb service will return active as well as inactive packages.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**leaseId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**customerId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**isActive** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/leases\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\n\\*\n\n**leaseId** \\[Integer\\]\n\noptional\n\n**customerId** \\[Integer\\]\n\noptional\n\n**isActive** \\[Boolean\\]\n\nOff \n\n**Request URL Parameter:**\n\n**Page Number**\n\n**Page Size**\n\n**Request Header:**\n\n**Send Pagination Links in Response Body**\n\nOff \n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getRentersInsurancePolicies",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Leases](/api/v1/documentation/#Leases) » [getRentersInsurancePolicies](#)\n=========================================================================================================\n\n[getRentersInsurancePolicies](#)\n--------------------------------\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. propertyId\n\n**leaseStatusTypeIds** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. leaseStatusTypeIds\n\n**lastUpdatedOn** \\[Date\\]\n\nThis is an optional field. This field accepts single value. lastUpdatedOn\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/leases\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\n\\*\n\n**leaseStatusTypeIds** \\[Integer\\]\n\noptional\n\n**lastUpdatedOn** \\[Date\\]\n\noptional\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/moveInLease",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Leases](/api/v1/documentation/#Leases) » [moveInLease](#)\n=========================================================================================\n\n[moveInLease](#)\n----------------\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* leaseId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/leases\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/moveOutLease",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Leases](/api/v1/documentation/#Leases) » [moveOutLease](#)\n==========================================================================================\n\n[moveOutLease](#)\n-----------------\n\nmoveOutLease\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. propertyId\n\n**\\* leaseId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. leaseId\n\n**\\* moveOutTypeId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. moveOutTypeId\n\n**\\* moveOutReasonId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. moveOutReasonId\n\n**noticeDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. noticeDate\n\n**\\* moveOutDate** \\[Date\\]\n\nThis is a required field. This field accepts single value. moveOutDate\n\n**\\* unitAvailableOnDate** \\[Date\\]\n\nThis is a required field. This field accepts single value. unitAvailableOnDate\n\n**endContinuingScheduledCharges** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. endContinuingScheduledCharges\n\n**postAcceleratedRent** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. postAcceleratedRent\n\n**refundMethodId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. refundMethodId\n\n**makeReadyEndDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. According to Property Preference \"Require Make Ready Work Order on Mov e-out,...\" the makeReadyEndDate is conditional mandatory.\n\n**streetLine1** \\[String\\]\n\nThis is an optional field. This field accepts single value. Forwarding Address street\\_Line1\n\n**streetLine2** \\[String\\]\n\nThis is an optional field. This field accepts single value. Forwarding Address street\\_Line2\n\n**streetLine3** \\[String\\]\n\nThis is an optional field. This field accepts single value. Forwarding Address street\\_Line3\n\n**city** \\[String\\]\n\nThis is an optional field. This field accepts single value. Forwarding address's city\n\n**stateCode** \\[String\\]\n\nThis is an optional field. This field accepts single value. Forwarding Address's stateCode\n\n**postalCode** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Forwarding Address's Postal Code\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/leases\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/onNoticeLease",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Leases](/api/v1/documentation/#Leases) » [onNoticeLease](#)\n===========================================================================================\n\n[onNoticeLease](#)\n------------------\n\nonNoticeLease\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. propertyId\n\n**\\* leaseId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. leaseId\n\n**\\* moveOutTypeId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. moveOutTypeId\n\n**\\* moveOutReasonId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. moveOutReasonId\n\n**\\* noticeDate** \\[Date\\]\n\nThis is a required field. This field accepts single value. noticeDate (YYYY-MM-DD)\n\n**\\* moveOutDate** \\[Date\\]\n\nThis is a required field. This field accepts single value. moveOutDate (YYYY-MM-DD)\n\n**\\* unitAvailableOnDate** \\[Date\\]\n\nThis is a required field. This field accepts single value. unitAvailableOnDate (YYYY-MM-DD)\n\n**\\* makeReadyEndDate** \\[Date\\]\n\nThis is a required field. This field accepts single value. According to Property Preference \"Require Make Ready Work Order on Mov e-out,...\" the makeReadyEndDate is conditional mandatory.\n\n**\\* submitRefundDetails** \\[Boolean\\]\n\nThis is a required field. This field accepts single value. submitRefundDetails\n\n**refundMethodId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. If the value of 'submitRefundDetails' is '1', only then the 'refundMet hodId' is required.\n\n**streetLine1** \\[String\\]\n\nThis is an optional field. This field accepts single value. If the value of 'submitRefundDetails' is '1', only then the 'streetLin e1' is required.\n\n**streetLine2** \\[String\\]\n\nThis is an optional field. This field accepts single value. If the value of 'submitRefundDetails' is '1', only then the 'streetLin e2' is required.\n\n**streetLine3** \\[String\\]\n\nThis is an optional field. This field accepts single value. If the value of 'submitRefundDetails' is '1', only then the 'streetLin e3' is required.\n\n**city** \\[String\\]\n\nThis is an optional field. This field accepts single value. If the value of 'submitRefundDetails' is '1', only then the 'city' is required.\n\n**stateCode** \\[String\\]\n\nThis is an optional field. This field accepts single value. If the value of 'submitRefundDetails' is '1', only then the 'stateCode ' is required.\n\n**postalCode** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. If the value of 'submitRefundDetails' is '1', only then the 'postalCod e' is required.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/leases\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/sendLeaseActivities",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Leases](/api/v1/documentation/#Leases) » [sendLeaseActivities](#)\n=================================================================================================\n\n[sendLeaseActivities](#)\n------------------------\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* leaseId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* eventTypeId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Acceptable values are: 8,335,4,436,5,6,15,56. 4 for 'Call-Outgoing' , 5 for 'Text-Incoming', 6 for 'Text-Outgoing', 8 for 'Notes', 335 fo r 'Lease Retrieved By Collections Agency', 436 for 'Hazard Notes', 15 for 'Scheduled Follow-Up', 56 for 'Delinquency Notes'.\n\n**\\* eventDateTime** \\[Date\\]\n\nThis is a required field. This field accepts single value.\n\n**comment** \\[String\\]\n\nThis is an optional field. This field accepts single value. This becomes mandatory if eventTypeId is either 4,5, or 6.\n\n**hazardEndDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. This would give end date for the hazard note.\n\n**\\* hazardNote** \\[String\\]\n\nThis is a required field. This field accepts single value. This would add note when creating hazard event.\n\n**leaseIntervalId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**leasingAgentId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. This becomes mandatory if eventTypeId is 15.\n\n**eventResultId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. This becomes mandatory if eventTypeId is either 4,5, or 6.\n\n**customerIds** \\[String\\]\n\nThis is an optional field. This field accepts comma seperated multiple values.\n\n**scheduleDateTime** \\[DateTime\\]\n\nThis is an optional field. This field accepts single value. This becomes mandatory if eventTypeId is 15.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/leases\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/sendLeaseDocuments",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Leases](/api/v1/documentation/#Leases) » [sendLeaseDocuments](#)\n================================================================================================\n\n[sendLeaseDocuments](#)\n-----------------------\n\nThis API can be used to upload documents onto Entrata leases such as application, lease, policy, agreement documents. This API accepts files as a form file upload and the Content-Type should be \"multipart/form-data\". Please see the \"Code Snippet\" tab for more technical details and some sample code examples.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Code Snippet](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**leaseId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**applicantId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**applicationId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**\\* fileName** \\[String\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* leaseFileType** \\[String\\]\n\nThis is a required field. This field accepts single value. Use the system code of the leaseFileType node from the getPickLists AP I response.\n\n**\\* fileTypeId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. This is a required field. This field accepts single value.\n\n**isShowInResidentPortal** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. This controls whether the document will show up in their Resident Port al and be visible to the resident.\n\n**customerIds** \\[String\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. If provided this file will attach to the mentioned customers. if skipp ed, this file will be attached to all the customers.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/leases\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = ' <request>     <auth>         <type>basic</type>     </auth>     <requestId>15</requestId>     <method>         <name>sendLeaseDocuments</name>         <params>         <propertyId>xxx</propertyId> <!-- required -->         <leaseId>xxxx</leaseId> <!-- Required -->         <files>            <file>                <fileName>file1.pdf</fileName> <!-- required -->                <leaseFileType>OTHER</leaseFileType>                <!-- required. Use the system code of the leaseFileType node from the getPickLists API response. -->                <isShowInResidentPortal>1</isShowInResidentPortal>                <customerIds>xxx,xxx</customerIds>                <!-- optional, if provided this file will attach to the mentioned customers. if skipped, this file will attached to all the customers -->            </file>            <file>                <fileName>file2.pdf</fileName> <!-- required -->                <leaseFileType>OTHER</leaseFileType>                <!-- required. Use the system code of the leaseFileType node from the getPickLists API response. -->                <isShowInResidentPortal>1</isShowInResidentPortal>                <customerIds>xxx,xxx</customerIds>                <!-- optional, if provided this file will attach to the mentioned customers. if skipped, this file will attached to all the customers -->            </file>         </files>         </params>     </method> </request>';    /* An Example JSON Request */ string jsonRequest = '{     \"auth\": {       \"type\": \"basic\"     },     \"requestId\": \"15\",     \"method\": {         \"name\": \"sendLeaseDocuments\",         \"params\": {         \"propertyId\": \"xxx\",         \"leaseId\": \"xxxx\",         \"files\": {         \"file\": [             {               \"fileName\": \"file1.pdf\",               \"leaseFileType\": \"OTHER\",               \"isShowInResidentPortal\": \"1\",               \"customerIds\": \"xxx,xxx\"             },             {               \"fileName\": \"file2.pdf\",               \"leaseFileType\": \"OTHER\",               \"isShowInResidentPortal\": \"1\",               \"customerIds\": \"xxx,xxx\"             }          ]        }       }      }     }';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = ' <request>     <auth>         <type>basic</type>     </auth>     <requestId>15</requestId>     <method>         <name>sendLeaseDocuments</name>         <params>         <propertyId>xxx</propertyId> <!-- required -->         <leaseId>xxxx</leaseId> <!-- Required -->         <files>            <file>                <fileName>file1.pdf</fileName> <!-- required -->                <leaseFileType>OTHER</leaseFileType>                <!-- required. Use the system code of the leaseFileType node from the getPickLists API response. -->                <isShowInResidentPortal>1</isShowInResidentPortal>                <customerIds>xxx,xxx</customerIds>                <!-- optional, if provided this file will attach to the mentioned customers. if skipped, this file will attached to all the customers -->            </file>            <file>                <fileName>file2.pdf</fileName> <!-- required -->                <leaseFileType>OTHER</leaseFileType>                <!-- required. Use the system code of the leaseFileType node from the getPickLists API response. -->                <isShowInResidentPortal>1</isShowInResidentPortal>                <customerIds>xxx,xxx</customerIds>                <!-- optional, if provided this file will attach to the mentioned customers. if skipped, this file will attached to all the customers -->            </file>         </files>         </params>     </method> </request>';    /* An Example JSON Request */ string jsonRequest = '{     \"auth\": {       \"type\": \"basic\"     },     \"requestId\": \"15\",     \"method\": {         \"name\": \"sendLeaseDocuments\",         \"params\": {         \"propertyId\": \"xxx\",         \"leaseId\": \"xxxx\",         \"files\": {         \"file\": [             {               \"fileName\": \"file1.pdf\",               \"leaseFileType\": \"OTHER\",               \"isShowInResidentPortal\": \"1\",               \"customerIds\": \"xxx,xxx\"             },             {               \"fileName\": \"file2.pdf\",               \"leaseFileType\": \"OTHER\",               \"isShowInResidentPortal\": \"1\",               \"customerIds\": \"xxx,xxx\"             }          ]        }       }      }     }';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = ' <request>     <auth>         <type>basic</type>     </auth>     <requestId>15</requestId>     <method>         <name>sendLeaseDocuments</name>         <params>         <propertyId>xxx</propertyId> <!-- required -->         <leaseId>xxxx</leaseId> <!-- Required -->         <files>            <file>                <fileName>file1.pdf</fileName> <!-- required -->                <leaseFileType>OTHER</leaseFileType>                <!-- required. Use the system code of the leaseFileType node from the getPickLists API response. -->                <isShowInResidentPortal>1</isShowInResidentPortal>                <customerIds>xxx,xxx</customerIds>                <!-- optional, if provided this file will attach to the mentioned customers. if skipped, this file will attached to all the customers -->            </file>            <file>                <fileName>file2.pdf</fileName> <!-- required -->                <leaseFileType>OTHER</leaseFileType>                <!-- required. Use the system code of the leaseFileType node from the getPickLists API response. -->                <isShowInResidentPortal>1</isShowInResidentPortal>                <customerIds>xxx,xxx</customerIds>                <!-- optional, if provided this file will attach to the mentioned customers. if skipped, this file will attached to all the customers -->            </file>         </files>         </params>     </method> </request>' ;    /* An Example JSON Request */ $jsonRequest = '{     \"auth\": {       \"type\": \"basic\"     },     \"requestId\": \"15\",     \"method\": {         \"name\": \"sendLeaseDocuments\",         \"params\": {         \"propertyId\": \"xxx\",         \"leaseId\": \"xxxx\",         \"files\": {         \"file\": [             {               \"fileName\": \"file1.pdf\",               \"leaseFileType\": \"OTHER\",               \"isShowInResidentPortal\": \"1\",               \"customerIds\": \"xxx,xxx\"             },             {               \"fileName\": \"file2.pdf\",               \"leaseFileType\": \"OTHER\",               \"isShowInResidentPortal\": \"1\",               \"customerIds\": \"xxx,xxx\"             }          ]        }       }      }     }' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/sendLeases",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Leases](/api/v1/documentation/#Leases) » [sendLeases](#)\n========================================================================================\n\n[sendLeases](#)\n---------------\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. propertyId\n\n**\\* leaseStartDate** \\[Date\\]\n\nThis is a required field. This field accepts single value. leaseStartDate (YYYY-MM-DD)\n\n**\\* leaseEndDate** \\[Date\\]\n\nThis is a required field. This field accepts single value. leaseEndDate (YYYY-MM-DD)\n\n**\\* moveInDate** \\[Date\\]\n\nThis is a required field. This field accepts single value. moveInDate (YYYY-MM-DD)\n\n**\\* leaseTermId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. leaseTermId\n\n**\\* floorplanId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. floorplanId\n\n**\\* unitSpaceId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. unitSpaceId\n\n**spaceConfigurationId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. If the provided property is of type 'Student', only then 'spaceConfigu rationId' is required.\n\n**leaseStartWindowId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. If the provided property is of type 'Student', only then 'leaseStartWi ndowId' is required.\n\n**\\* firstName** \\[String\\]\n\nThis is a required field. This field accepts single value. firstName\n\n**middleName** \\[String\\]\n\nThis is an optional field. This field accepts single value. middleName\n\n**\\* lastName** \\[String\\]\n\nThis is a required field. This field accepts single value. lastName\n\n**\\* customerRelationshipTypeId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. customerRelationshipTypeId\n\n**emailAddress** \\[String\\]\n\nThis is an optional field. This field accepts single value. emailAddress\n\n**birthDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. birthDate (YYYY-MM-DD)\n\n**\\* phoneNumberTypeId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. phoneNumberTypeId\n\n**\\* phoneNumber** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Primary phoneNumber\n\n**\\* addressTypeId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. addressTypeId\n\n**\\* streetLine1** \\[String\\]\n\nThis is a required field. This field accepts single value. Address streetLine1\n\n**streetLine2** \\[String\\]\n\nThis is an optional field. This field accepts single value. streetLine2\n\n**\\* city** \\[String\\]\n\nThis is a required field. This field accepts single value. city\n\n**\\* stateCode** \\[String\\]\n\nThis is a required field. This field accepts single value. stateCode\n\n**\\* postalCode** \\[Integer\\]\n\nThis is a required field. This field accepts single value. postalCode\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/leases\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/sendRentersInsurancePolicies",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Leases](/api/v1/documentation/#Leases) » [sendRentersInsurancePolicies](#)\n==========================================================================================================\n\n[sendRentersInsurancePolicies](#) Version 1 Version 2\n-----------------------------------------------------\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Change Logs](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. propertyId\n\n**id** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Insurance policy id\n\n**\\* leaseId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. leaseId\n\n**\\* customerId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. customerId\n\n**\\* provider** \\[String\\]\n\nThis is a required field. This field accepts single value. provider\n\n**\\* policyNumber** \\[String\\]\n\nThis is a required field. This field accepts single value. policyNumber\n\n**\\* startDate** \\[Date\\]\n\nThis is a required field. This field accepts single value. startDate\n\n**\\* endDate** \\[Date\\]\n\nThis is a required field. This field accepts single value. endDate\n\n**\\* liability** \\[Integer\\]\n\nThis is a required field. This field accepts single value. liability\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/leases\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\nVersion 2\n\n\\- We now allow multiple customer IDs to be sent on a policy to link the policy to multiple people at once.  Previously only one customer ID was able to be passed on a policy so additional customers had to be linked later.  \n  \nNote:  In getRentersInsurancePolicies we now also return multiple customer IDs on a policy in the response."
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/sendRoommateGroups",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Leases](/api/v1/documentation/#Leases) » [sendRoommateGroups](#)\n================================================================================================\n\n[sendRoommateGroups](#)\n-----------------------\n\nTo insert the roommate groups.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**groupId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. This is the conditionally required, if the invitorApplicationId is not passed then groupId is required.\n\n**invitorApplicationId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. This is the conditionally required, if the groupId is not passed then invitorApplicationId is required.\n\n**\\* inviteeApplicationId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/leases\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/sendScheduledCharges",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Leases](/api/v1/documentation/#Leases) » [sendScheduledCharges](#)\n==================================================================================================\n\n[sendScheduledCharges](#)\n-------------------------\n\nsendScheduledCharges\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. propertyId\n\n**\\* leaseId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. leaseId\n\n**\\* chargeTimingId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. chargeTimingId\n\n**\\* chargeCodeTypeId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. chargeCodeTypeId\n\n**\\* chargeCodeId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. chargeCodeId\n\n**\\* amount** \\[Float\\]\n\nThis is a required field. This field accepts single value. amount\n\n**\\* startDate** \\[Date\\]\n\nThis is a required field. This field accepts single value. startDate\n\n**leaseIntervalId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. leaseIntervalId\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/leases\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/updateLease",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Leases](/api/v1/documentation/#Leases) » [updateLease](#)\n=========================================================================================\n\n[updateLease](#)\n----------------\n\nThis service allows the user to update the lease's basic required information and occupants.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Accepts the single property Id that is associated with a lease.\n\n**\\* leaseId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Accepts a single lease id for updating the lease details.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/leases\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/updateScheduledCharges",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Leases](/api/v1/documentation/#Leases) » [updateScheduledCharges](#)\n====================================================================================================\n\n[updateScheduledCharges](#) Version 1 Version 2\n-----------------------------------------------\n\nupdateScheduledCharges\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* id** \\[Integer\\]\n\nThis is a required field. This field accepts single value. scheduledCharge-- id\n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. propertyId\n\n**\\* leaseId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. leaseId\n\n**amount** \\[Float\\]\n\nThis is an optional field. This field accepts single value. Amount\n\n**isDeleted** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. This field support value 0 and 1.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/leases\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getCallLogs",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Leasing Center](/api/v1/documentation/#Leasing_Center) » [getCallLogs](#)\n=========================================================================================================\n\n[getCallLogs](#)\n----------------\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyIds** \\[Integer\\]\n\nThis is a required field. This field accepts comma seperated multiple values. This node should accept property Id's.\n\n**callSourceId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Supported values (1, 2, 7)\n\n**callTypeIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values.\n\n**callResultIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values.\n\n**answerStatus** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Supports only 1 (ANSWERED) & 2 (UNANSWERED)\n\n**voiceMailTypeId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Supported values are 1 (VOICE\\_MESSAGE) or 2 (UNPLAYED\\_VOICE\\_MESSAGE) o r 3 (NO\\_VOICE\\_MESSAGE).\n\n**callAnalyzed** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Supports 1 (ANALYZED) or 0 (NON\\_ANALYZED)\n\n**callState** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Supports 1 (NON-ARCHIVED) or 2 (ARCHIVED).\n\n**startDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. This field accepts value in MM/DD/YYYY format.\n\n**endDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. This field accepts value in MM/DD/YYYY format.\n\n **id** \\[Integer\\]\n\nThis field should display call id.\n\n **applicationId** \\[Integer\\]\n\nThis field should display application id.\n\n **callerName** \\[String\\]\n\nThis field should display caller name.\n\n **originPhoneNumber** \\[String\\]\n\nThis field should display the Original Phone number associated with le ad.\n\n **destinationPhoneNumber** \\[String\\]\n\nThis field should display the destination Phone number associated with lead.\n\n **callTypeId** \\[Integer\\]\n\nThis field should return call Type id.\n\n **callType** \\[String\\]\n\nThis field should return call Type.\n\n **callSourceId** \\[Integer\\]\n\nThis field should return call source id.\n\n **callSource** \\[String\\]\n\nThis field should return call source.\n\n **callResultId** \\[Integer\\]\n\nThis field should return call result id.\n\n **callResult** \\[String\\]\n\nThis field should return call result.\n\n **callState** \\[String\\]\n\nThis field should return call state. (NON-ARCHIVED or ARCHIVED)\n\n **callAnalyzed** \\[String\\]\n\nThis field should display call analyzed status. (ANALYZED or NON \\_ ANA LYZED)\n\n **voiceMailTypeId** \\[Integer\\]\n\nThis field should return the type id of voice mail. ('VOICE\\_MESSAGE' o r 'UNPLAYED\\_VOICE\\_MESSAGE' or 'NO\\_VOICE\\_MESSAGE')\n\n **answerStatus** \\[String\\]\n\nThis field should return status of answer.\n\n **leadSourceId** \\[Integer\\]\n\nThis field should display lead source id.\n\n **leadSourceName** \\[String\\]\n\nThis field should display lead source name.\n\n **agentName** \\[String\\]\n\nThis field should display agent name which is associated with call.\n\n **callDuration** \\[String\\]\n\nThis Field should display call duration.\n\n **callCenterTalkTime** \\[String\\]\n\nThis field should display call center talk time.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/leasingcenter\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyIds** \\[Integer\\]\n\n\\*\n\n**callSourceId** \\[Integer\\]\n\noptional\n\n**callTypeIds** \\[Integer\\]\n\noptional\n\n**callResultIds** \\[Integer\\]\n\noptional\n\n**answerStatus** \\[Integer\\]\n\noptional\n\n**voiceMailTypeId** \\[Integer\\]\n\noptional\n\n**callAnalyzed** \\[Integer\\]\n\noptional\n\n**callState** \\[Integer\\]\n\noptional\n\n**startDate** \\[Date\\]\n\noptional\n\n**endDate** \\[Date\\]\n\noptional\n\n**Request URL Parameter:**\n\n**Page Number**\n\n**Page Size**\n\n**Request Header:**\n\n**Send Pagination Links in Response Body**\n\nOff \n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getLeasingCenterPickLists",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Leasing Center](/api/v1/documentation/#Leasing_Center) » [getLeasingCenterPickLists](#)\n=======================================================================================================================\n\n[getLeasingCenterPickLists](#)\n------------------------------\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\nNo Parameters required.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/leasingcenter\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\nNo Parameters required.\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getInspections",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Maintenance](/api/v1/documentation/#Maintenance) » [getInspections](#)\n======================================================================================================\n\n[getInspections](#)\n-------------------\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**leaseId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**unitSpaceId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**fromDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value.\n\n**toDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value.\n\n**statusTypeIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values.\n\n**inspectionFormId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**inspectionTypeId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Supported values are 1( ROUTINE ), 2(MOVE\\_IN), 3(MOVE\\_OUT)\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/maintenance\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\n\\*\n\n**leaseId** \\[Integer\\]\n\noptional\n\n**unitSpaceId** \\[Integer\\]\n\noptional\n\n**fromDate** \\[Date\\]\n\noptional\n\n**toDate** \\[Date\\]\n\noptional\n\n**statusTypeIds** \\[Integer\\]\n\noptional\n\n**inspectionFormId** \\[Integer\\]\n\noptional\n\n**inspectionTypeId** \\[Integer\\]\n\noptional\n\n**Request URL Parameter:**\n\n**Page Number**\n\n**Page Size**\n\n**Request Header:**\n\n**Send Pagination Links in Response Body**\n\nOff \n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getInspectionTemplates",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Maintenance](/api/v1/documentation/#Maintenance) » [getInspectionTemplates](#)\n==============================================================================================================\n\n[getInspectionTemplates](#)\n---------------------------\n\nWe are fetching inspection templates based on the input provided in the request.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyIds** \\[String\\]\n\nThis is a required field. This field accepts comma seperated multiple values. The node accepts multiple propertyIds as the input value.\n\n**showDisabled** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. The node accepts a boolean value and default value for this node is '0 '.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/maintenance\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyIds** \\[String\\]\n\n\\*\n\n**showDisabled** \\[Boolean\\]\n\nOff \n\n**Request URL Parameter:**\n\n**Page Number**\n\n**Page Size**\n\n**Request Header:**\n\n**Send Pagination Links in Response Body**\n\nOff \n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getWorkOrderPickLists",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Maintenance](/api/v1/documentation/#Maintenance) » [getWorkOrderPickLists](#)\n=============================================================================================================\n\n[getWorkOrderPickLists](#)\n--------------------------\n\nPulls a list of Ids required for other workorder services\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**propertyIds** \\[String\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. This will fetch maintenance status/location/problem and priority Ids f or property.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/maintenance\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyIds** \\[String\\]\n\noptional\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getWorkOrders",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Maintenance](/api/v1/documentation/#Maintenance) » [getWorkOrders](#)\n=====================================================================================================\n\n[getWorkOrders](#)\n------------------\n\nRetrieves work orders information.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Property Id\n\n**workOrderId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**propertyUnitId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. propertyUnitId\n\n**vendorId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. vendorId\n\n**leaseStatusTypeIds** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. leaseStatusTypeIds\n\n**workOrderTypeIds** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. workOrderTypeIds\n\n**buildingName** \\[String\\]\n\nThis is an optional field. This field accepts single value. buildingName\n\n**unitNumber** \\[String\\]\n\nThis is an optional field. This field accepts single value. Unit number\n\n**maintenancePriorityId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. maintenancePriorityId\n\n**maintenanceCategoryId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. maintenanceCategoryId\n\n**maintenanceProblemId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. maintenanceProblemId\n\n**includeChildWorkOrders** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. includeChildWorkOrders\n\n**includeDeletedWorkOrders** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. If this flag is set to Yes then we are returning deleted work orders i n the response else we are not.\n\n**createdOnFromDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. createdOnFromDate\n\n**createdOnToDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. createdOnToDate\n\n**lastUpdatedOnFromDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. If Location, Category, Problem, Description, Priority, and Status are updated then only work order will be returned in this filter.\n\n**lastUpdatedOnToDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. If Location, Category, Problem, Description, Priority, and Status are updated then only work order will be returned in this filter.\n\n**completedOnFromDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. completedOnFromDate\n\n**completedOnToDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. completedOnToDate\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/maintenance\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\n\\*\n\n**workOrderId** \\[Integer\\]\n\noptional\n\n**propertyUnitId** \\[Integer\\]\n\noptional\n\n**vendorId** \\[Integer\\]\n\noptional\n\n**leaseStatusTypeIds** \\[Integer\\]\n\noptional\n\n**workOrderTypeIds** \\[Integer\\]\n\noptional\n\n**buildingName** \\[String\\]\n\noptional\n\n**unitNumber** \\[String\\]\n\noptional\n\n**maintenancePriorityId** \\[Integer\\]\n\noptional\n\n**maintenanceCategoryId** \\[Integer\\]\n\noptional\n\n**maintenanceProblemId** \\[Integer\\]\n\noptional\n\n**includeChildWorkOrders** \\[Boolean\\]\n\nOff \n\n**includeDeletedWorkOrders** \\[Boolean\\]\n\nOff \n\n**createdOnFromDate** \\[Date\\]\n\noptional\n\n**createdOnToDate** \\[Date\\]\n\noptional\n\n**lastUpdatedOnFromDate** \\[Date\\]\n\noptional\n\n**lastUpdatedOnToDate** \\[Date\\]\n\noptional\n\n**completedOnFromDate** \\[Date\\]\n\noptional\n\n**completedOnToDate** \\[Date\\]\n\noptional\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/sendWorkOrders",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Maintenance](/api/v1/documentation/#Maintenance) » [sendWorkOrders](#)\n======================================================================================================\n\n[sendWorkOrders](#)\n-------------------\n\nInserts new work orders.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Property Id\n\n**customerId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Customer Id\n\n**leaseId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Lease ID\n\n**unitNumber** \\[String\\]\n\nThis is an optional field. This field accepts single value. Unit mumber\n\n**customerFirstName** \\[String\\]\n\nThis is an optional field. This field accepts single value. Customer First Name\n\n**customerLastName** \\[String\\]\n\nThis is an optional field. This field accepts single value. Customer Last Name\n\n**\\* mainPhoneNumber** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Main contact phone number\n\n**altPhoneNumber** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Alternate contact phone number\n\n**emailAddress** \\[String\\]\n\nThis is an optional field. This field accepts single value. Email Address\n\n**\\* permissionToEnter** \\[Boolean\\]\n\nThis is a required field. This field accepts single value. Permission to enter\n\n**\\* maintenanceLocationId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Maintenance location\n\n**\\* maintenanceCategoryId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Maintenance Category Id\n\n**\\* maintenanceProblemId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Maintenance problem\n\n**subMaintenanceProblemId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. SubMaintenance problem\n\n**maintenancePriorityId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Maintenance Priority\n\n**\\* problemDescription** \\[String\\]\n\nThis is a required field. This field accepts single value. Problem Description\n\n**petsDescription** \\[String\\]\n\nThis is an optional field. This field accepts single value. Pets Description is required if the lease has pets or if permission t o enter is denied so that a reason why entry is not permitted can be e xplained or a pet warning given.\n\n**buildingName** \\[String\\]\n\nThis is an optional field. This field accepts single value. buildingName\n\n**assignedTo** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. assignedTo\n\n**scheduledStartDateTime** \\[DateTime\\]\n\nThis is an optional field. This field accepts single value. scheduledStartDateTime\n\n**scheduledEndDateTime** \\[DateTime\\]\n\nThis is an optional field. This field accepts single value. scheduledEndDateTime\n\n**dueDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. While optional by default, dueDate could become required depending on a property setting.\n\n**isFloatingWorkOrder** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. isFloatingWorkOrder\n\n**priorityOrderNum** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Negative numbers not allowed. This parameter is not applicable to mos t clients and should not be used without first checking with Entrata.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/maintenance\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/updateWorkOrders",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Maintenance](/api/v1/documentation/#Maintenance) » [updateWorkOrders](#)\n========================================================================================================\n\n[updateWorkOrders](#)\n---------------------\n\nUpdate the work orders.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* workOrderId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**leaseId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**customerId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**maintenanceStatusTypeId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**maintenancePriorityId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**maintenanceLocationId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**maintenanceCategoryId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**\\* maintenanceProblemId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**subMaintenanceProblemId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**mainPhoneNumber** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**altPhoneNumber** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**emailAddress** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**problemDescription** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**petsDescription** \\[String\\]\n\nThis is an optional field. This field accepts single value. Pets Description could become required if the lease has pets or if per mission to enter is denied so that a reason why entry is not permitted can be explained or a pet warning given.\n\n**completedDateTime** \\[DateTime\\]\n\nThis is an optional field. This field accepts single value.\n\n**closingComments** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**scheduledStartDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. scheduledStartDate\n\n**scheduledEndDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. scheduledEndDate\n\n**vendorId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. vendorId\n\n**parentWorkOrderId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. parentWorkOrderId\n\n**assignedTo** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. assignedTo\n\n**dueDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. While optional by default, dueDate could become required depending on a property setting.\n\n**unitAvailableOnDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. This will set the related unit's available date. Only works for make ready type work orders and only if a scheduledEndDate is provided. M ust be on or after the scheduledEndDate.\n\n**priorityOrderNum** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Negative numbers not allowed.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/maintenance\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getPricingPicklists",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Pricing](/api/v1/documentation/#Pricing) » [getPricingPicklists](#)\n===================================================================================================\n\n[getPricingPicklists](#)\n------------------------\n\nRetrieves picklist of id/name for the \"CASCADE\", \"ORIGIN\" and \"TRIGGER\" from the company.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\nNo Parameters required.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/pricing\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\nNo Parameters required.\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/insertPricing",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Pricing](/api/v1/documentation/#Pricing) » [insertPricing](#)\n=============================================================================================\n\n[insertPricing](#)\n------------------\n\ninsertPricing allows updating pricing at a different level with multiple combinations. All nodes create a number of combinations and depending on the property setup API accepts the data. E.g If the property has the setup to accept term wise pricing then only API can accept the allowed terms under the node \"leaseTermMonths\". Please note that this API is designed for Conventional property type and may not work for other property types.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* pricingLevelId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Pricing level has four possible values, 1: property, 2: floor plan 3: Unit type 4: Unit space.\n\n**\\* pricingLevelReferenceId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. This is Entrata's record id depending on #pricingLevelId. E.g. If pric ingLevelId = 4 then pricingLevelReferenceId needs to be unit space id.\n\n**\\* chargeUsageId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. This helps to differentiate pricing usage. 1. Base 2: Amenity 3: Pet 4: Add-Ons 5: Risk Premium 7: Maintenance\n\n**\\* chargeUsageReferenceId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. This value needs to set if needs to update pricing any other than base rent. E.g if want to update amenity rent then chargeUsageReferenceId should amenity id. In the case of base pricing, it needs to be 0.\n\n**isRenewal** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Just to specify if it is renewal rent.\n\n**\\* chargeTimingId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. This explains when charge suppose to apply \\[charge trigger timing\\]. E .g. There are a number of possible values but common is 307: Monthly 202: Move In 206: Move Out 102: Application Completed\n\n**\\* chargeCodeTypeId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. This explains charge code types. 1: Payment 2: Rent 3: Other Income 7: Deposit\n\n**\\* chargeCodeId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. This is Entrata charge code id which we want to use.\n\n**leaseTermMonths** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Most of the cases it will be zero but if the property has the setup to have term wise pricing/rent then you can send the different pricing f or different terms. Zero means single value for all lease terms.\n\n**leaseStartRangeStart** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. This nodes allows to send different rent amount for different move in dates but with same intervals. Refer Property setting: Price By Lease Start Range. E.g Property has pricing setup to have 3 days interval pricing then data can looks like, leaseStartRangeStart:0 leaseStartRa ngeEnd:2 amount:700 Zero represents current date or unit's available on the date \\[if available on a date is in future\\]. If sending 'isRe newal' as true this value should always be sent as 0\n\n**leaseStartRangeEnd** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. This nodes allows to send different rent amount for different move in dates but with the same intervals. E.g Property has pricing setup to have 3 days interval pricing then data can look like, leaseStartRange Start:0 leaseStartRangeEnd:2 amount:700. If sending 'isRenewal' as true this value should always be sent as 0\n\n**\\* amount** \\[Float\\]\n\nThis is a required field. This field accepts single value. Rate Amount.\n\n**\\* leaseTermName** \\[String\\]\n\nThis is a required field. This field accepts single value. If there are multiple lease terms with same length then this node is m andatory.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/pricing\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/sendBudgetedRent",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Pricing](/api/v1/documentation/#Pricing) » [sendBudgetedRent](#)\n================================================================================================\n\n[sendBudgetedRent](#)\n---------------------\n\nsendBudgetedRent insert rates for unavailable units.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. propertyId\n\n**\\* pricingLevelId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Pricing level has two possible values, 3 for Unit type and 4 for Unit space.\n\n**\\* pricingLevelReferenceId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. This is Entrata's record id depending on #pricingLevelId. E.g. If pric ingLevelId = 3 then pricingLevelReferenceId needs to be unit type id a nd if pricingLevelId = 4 then pricingLevelReferenceId needs to be unit space id.\n\n**amenityAmount** \\[Float\\]\n\nThis is an optional field. This field accepts single value. Amenity rate amount.\n\n**\\* amount** \\[Float\\]\n\nThis is a required field. This field accepts single value. amount\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/pricing\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getAmenityReservations",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Properties](/api/v1/documentation/#Properties) » [getAmenityReservations](#)\n============================================================================================================\n\n[getAmenityReservations](#)\n---------------------------\n\ngetAmenityReservations\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**amenityIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values.\n\n**amenityReservationStatusTypeIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/properties\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\n\\*\n\n**amenityIds** \\[Integer\\]\n\noptional\n\n**amenityReservationStatusTypeIds** \\[Integer\\]\n\noptional\n\n**Request URL Parameter:**\n\n**Page Number**\n\n**Page Size**\n\n**Request Header:**\n\n**Send Pagination Links in Response Body**\n\nOff \n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getCalendarAvailability",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Properties](/api/v1/documentation/#Properties) » [getCalendarAvailability](#)\n=============================================================================================================\n\n[getCalendarAvailability](#) Version 1 Version 2\n------------------------------------------------\n\nThis API pulls information about the property calendar such as general staff and tour hours of operation, allowed length of appointments, and provides the open calendar time slots as per the dates and calendar category types passed in the request.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. property Id\n\n**\\* fromDate** \\[Date\\]\n\nThis is a required field. This field accepts single value. fromDate indicates from which date we should start to include when ret urning available time periods off the property calendar. Only a 7 da y range is allowed per request and that range includes the fromDate an d toDate in it.\n\n**\\* toDate** \\[Date\\]\n\nThis is a required field. This field accepts single value. toDate indicates up till which date we should include when returning a vailable time periods off the property calendar. Only a 7 day range is allowed per request and that range includes the fromDate and toDate in it.\n\n**calendarEventCategoryIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. Calendar Event type ids. Possible id: 1-General, 2-Resident, 3-Leasing , 4-Maintenance If no Id's are passed only Resident and Leasing cat egories are considered by default.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/properties\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\n\\*\n\n**fromDate** \\[Date\\]\n\n\\*\n\n**toDate** \\[Date\\]\n\n\\*\n\n**calendarEventCategoryIds** \\[Integer\\]\n\noptional\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getFloorPlans",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Properties](/api/v1/documentation/#Properties) » [getFloorPlans](#)\n===================================================================================================\n\n[getFloorPlans](#)\n------------------\n\nRetrieves list of floor plans for a property.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. propertyId\n\n**propertyFloorPlanIds** \\[String\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. propertyFloorPlanIds.\n\n**usePropertyPreferences** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. Checks for the property settings manipulate floorplan data and honour those settings.\n\n**includeDisabledFloorplans** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. If provided value is 1, then user should get disabled floorplans along with the enabled one.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/properties\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\n\\*\n\n**propertyFloorPlanIds** \\[String\\]\n\noptional\n\n**usePropertyPreferences** \\[Boolean\\]\n\nOff \n\n**includeDisabledFloorplans** \\[Boolean\\]\n\nOff \n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getPetTypes",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Properties](/api/v1/documentation/#Properties) » [getPetTypes](#)\n=================================================================================================\n\n[getPetTypes](#)\n----------------\n\nPulls a list of Pet types\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyIds** \\[String\\]\n\nThis is a required field. This field accepts comma seperated multiple values. List of comma seperated propertyIds\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/properties\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyIds** \\[String\\]\n\n\\*\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getPhoneNumber",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Properties](/api/v1/documentation/#Properties) » [getPhoneNumber](#)\n====================================================================================================\n\n[getPhoneNumber](#)\n-------------------\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**switchCode** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**ref** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/properties\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyIds** \\[isarray\\]\n\n\\*\n\n**switchCode** \\[Integer\\]\n\noptional\n\n**ref** \\[String\\]\n\noptional\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getProperties",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Properties](/api/v1/documentation/#Properties) » [getProperties](#)\n===================================================================================================\n\n[getProperties](#)\n------------------\n\nRetrieves properties details for the management company.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**propertyIds** \\[String\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. PropertyIds\n\n**propertyLookupCode** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**showAllStatus** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. Show all properties with any status.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/properties\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyIds** \\[String\\]\n\noptional\n\n**propertyLookupCode** \\[String\\]\n\noptional\n\n**showAllStatus** \\[Boolean\\]\n\nOff \n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getPropertyAddOns",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Properties](/api/v1/documentation/#Properties) » [getPropertyAddOns](#)\n=======================================================================================================\n\n[getPropertyAddOns](#)\n----------------------\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/properties\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\n\\*\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getPropertyAnnouncements",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Properties](/api/v1/documentation/#Properties) » [getPropertyAnnouncements](#)\n==============================================================================================================\n\n[getPropertyAnnouncements](#)\n-----------------------------\n\nRetrieves announcements associated to property.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/properties\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\n\\*\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getPropertyPickLists",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Properties](/api/v1/documentation/#Properties) » [getPropertyPickLists](#)\n==========================================================================================================\n\n[getPropertyPickLists](#) Version 1 Version 2\n---------------------------------------------\n\nPick List for Properties\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n*   [Change Logs](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**propertyIds** \\[String\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. Comman seperated list of properties\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/properties\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyIds** \\[String\\]\n\noptional\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here\n\nVersion 2\n\n\\-  Added parent node \"properties\" which now contains all the \"property\" nodes.  \n  \n\\-  In r1, states are rendered under company >>searchAreas >> countries >> country node - this is now removed in r2 and now states and their search areas will render parallel to the properties node, removing 4 levels.  \n  \n\\-  Removed AddonGroups node. Now Rentable Items, Assignable Items and Services will be rendered separately, removing 1 level.  \n  \n\\-  Renamed leasePeriods to leaseTerms.  \n  \n\\-  Added the flag \"webVisible\" to the leaseTerm which specify whether the lease term should be visible on a website or not per the property settings."
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getRentableItems",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Properties](/api/v1/documentation/#Properties) » [getRentableItems](#)\n======================================================================================================\n\n[getRentableItems](#)\n---------------------\n\nRetrieves list of rentable items for a property.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. propertyId\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/properties\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\n\\*\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getReservableAmenities",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Properties](/api/v1/documentation/#Properties) » [getReservableAmenities](#)\n============================================================================================================\n\n[getReservableAmenities](#)\n---------------------------\n\ngetReservableAmenities\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**amenityIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/properties\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\n\\*\n\n**amenityIds** \\[Integer\\]\n\noptional\n\n**Request URL Parameter:**\n\n**Page Number**\n\n**Page Size**\n\n**Request Header:**\n\n**Send Pagination Links in Response Body**\n\nOff \n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getWebsites",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Properties](/api/v1/documentation/#Properties) » [getWebsites](#)\n=================================================================================================\n\n[getWebsites](#)\n----------------\n\ngetWebSites\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyIds** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/properties\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyIds** \\[Integer\\]\n\n\\*\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/sendFloorplans",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Properties](/api/v1/documentation/#Properties) » [sendFloorplans](#)\n====================================================================================================\n\n[sendFloorplans](#)\n-------------------\n\nInsert the floorplans\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. This node accepts the property id on which the floorplan will get adde d.\n\n**\\* name** \\[String\\]\n\nThis is a required field. This field accepts single value. This node accepts the name of the floorplan.\n\n**description** \\[String\\]\n\nThis is an optional field. This field accepts single value. This node accepts the description of the floorplan\n\n**seoTitle** \\[String\\]\n\nThis is an optional field. This field accepts single value. This node accepts the seoTitle of the floorplan\n\n**seoDescription** \\[String\\]\n\nThis is an optional field. This field accepts single value. This node accepts the seoDescription of the floorplan\n\n**seoKeywords** \\[String\\]\n\nThis is an optional field. This field accepts single value. This node accepts the seoKeywords of the floorplan\n\n**isPublished** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. This flag accepts 1 or 0, whether the floorplan needs to be published or not.\n\n**isDisabledVirtualMoveIn** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. This flag accepts 1 or 0.\n\n**minSquareFeet** \\[Float\\]\n\nThis is an optional field. This field accepts single value. This node accepts the minimum square feet value of the floorplan.\n\n**maxSquareFeet** \\[Float\\]\n\nThis is an optional field. This field accepts single value. This node accepts the maximun square feet value of the floorplan.\n\n**\\* numberOfBedRooms** \\[Float\\]\n\nThis is a required field. This field accepts single value. This node accepts a total number of bedrooms.\n\n**\\* numberOfBathRooms** \\[Integer\\]\n\nThis is a required field. This field accepts single value. This node accepts a total number of bathrooms.\n\n**isFeatured** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. This flag accepts 1 or 0.\n\n **node** \\[Integer\\]\n\n **status** \\[String\\]\n\n **floorplanId** \\[Integer\\]\n\n **name** \\[String\\]\n\n **message** \\[String\\]\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/properties\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/sendRentableItems",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Properties](/api/v1/documentation/#Properties) » [sendRentableItems](#)\n=======================================================================================================\n\n[sendRentableItems](#)\n----------------------\n\nTo insert the Rentable Items in to Entrata\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* categoryId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**name** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**showOnWebsite** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value.\n\n**isMarketed** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value.\n\n**hasInventory** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value.\n\n**availabilityStatusId** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value.\n\n**description** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n **rentableItemTypeId** \\[Integer\\]\n\n **rentableItemIds** \\[Integer\\]\n\n **Status** \\[String\\]\n\nThis node the status of the rentableItemTypes Success or Failed\n\n **Message** \\[String\\]\n\nThis node returns the message either it would be a success message or failed validation message\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/properties\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getAmenities",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Property Units](/api/v1/documentation/#Property_Units) » [getAmenities](#)\n==========================================================================================================\n\n[getAmenities](#)\n-----------------\n\nPulls a list of Amenities\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. propertyId\n\n**unitNumber** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Unit Number\n\n**chargeCodeTypeIds** \\[String\\]\n\nThis is an optional field. This field accepts comma seperated multiple values.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/propertyunits\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\n\\*\n\n**unitNumber** \\[Integer\\]\n\noptional\n\n**chargeCodeTypeIds** \\[String\\]\n\noptional\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getMitsPropertyUnits",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Property Units](/api/v1/documentation/#Property_Units) » [getMitsPropertyUnits](#)\n==================================================================================================================\n\n[getMitsPropertyUnits](#)\n-------------------------\n\nRetrieves property, floorplans, unit types, units, unit availability and pricing etc. information. This web service uses Property Marketing 3.0 MITS specifications. NOTE: For new projects, please do not use this service and instead use \"getPropertyUnits\" which is the updated version of this service but no longer supports the MITS standards.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyIds** \\[String\\]\n\nThis is a required field. This field accepts comma seperated multiple values. PSI Property Identification number\n\n**availableUnitsOnly** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. Flag for getting available units only\n\n**usePropertyPreferences** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. Flag for implementing preferences on result.\n\n**includeDisabledFloorplans** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. Flag for implementing Disabled Floorplans on result.\n\n**includeDisabledUnits** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. Flag for implementing Disabled Units on result.\n\n**showUnitSpaces** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. Flag for implementing Unit Spaces on result.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/propertyunits\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyIds** \\[String\\]\n\n\\*\n\n**availableUnitsOnly** \\[Boolean\\]\n\nOff \n\n**usePropertyPreferences** \\[Boolean\\]\n\nOff \n\n**includeDisabledFloorplans** \\[Boolean\\]\n\nOff \n\n**includeDisabledUnits** \\[Boolean\\]\n\nOff \n\n**showUnitSpaces** \\[Boolean\\]\n\nOff \n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getPropertyUnits",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Property Units](/api/v1/documentation/#Property_Units) » [getPropertyUnits](#)\n==============================================================================================================\n\n[getPropertyUnits](#)\n---------------------\n\nRetrieves property, floorplans, unit types, units, unit availability and pricing, etc. information. If the property requested is a parent property with related child or phased properties then those properties will be found in subsequent pages and can be requested using the page specific URLs provided in the response headers.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyIds** \\[Integer\\]\n\nThis is a required field. This field accepts comma seperated multiple values.\n\n**availableUnitsOnly** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value.\n\n**usePropertyPreferences** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. If enabled then the Entrata setting \"Max Available Units per Floor P lan\" will be honored and the available units returned will be reduced. Also requires using the availableUnitsOnly parameter as true (1).\n\n**includeDisabledFloorplans** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value.\n\n**includeDisabledUnits** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/propertyunits\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyIds** \\[Integer\\]\n\n\\*\n\n**availableUnitsOnly** \\[Boolean\\]\n\nOff \n\n**usePropertyPreferences** \\[Boolean\\]\n\nOff \n\n**includeDisabledFloorplans** \\[Boolean\\]\n\nOff \n\n**includeDisabledUnits** \\[Boolean\\]\n\nOff \n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getSpecials",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Property Units](/api/v1/documentation/#Property_Units) » [getSpecials](#)\n=========================================================================================================\n\n[getSpecials](#) Version 1 Version 2 Version 3\n----------------------------------------------\n\nPulls a Specials/Concessions for the propertyId passed.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n*   [Change Logs](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Property ID for getting Specials\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/propertyunits\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\n\\*\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here\n\nVersion 2\n\n\\-  Floor plan level specials are now listed under \"Floorplan section.  \n\\-  Unit Type specials are now listed under \"UnitType\" section  \n\\-  Future dated specials are now also included by default in the response whereas previously they were not included.  \n\\-  Number of coupon codes and number of remaining coupon code information is now displayed under \"PropertySpecial\" section.  \n\\-  Rate and lease information is included in \"rates\" and \"leaseTerms\" sections  \n\\-  Now provide more details on which specials are active to help with situations where two or more identical specials are returned.\n\nVersion 3\n\n1.'leaseTermId' are getting return inside rate node , i.e both nodes are now listed together.  \n2.No separate sections for 'leaseTerms'."
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getUnitsAvailabilityAndPricing",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Property Units](/api/v1/documentation/#Property_Units) » [getUnitsAvailabilityAndPricing](#)\n============================================================================================================================\n\n[getUnitsAvailabilityAndPricing](#)\n-----------------------------------\n\nPulls a list of Unit availability and their pricing\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Property Id\n\n**floorplanId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Floorplan Id\n\n**unitTypeId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Unit Type Id\n\n**propertyUnitId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Property Unit Id\n\n**availableUnitsOnly** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. If provided as 1 response will contain only available units. And If pr ovided as 0 response will contain all available and unavailable units\n\n**unavailableUnitsOnly** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. If provided value as 1 then will return only unavailable units in the response.\n\n**skipPricing** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. If provided value as 1 then will not show the rates(default API will r eturn the pricing)\n\n**showChildProperties** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. Shows child properties in result, by default child properties will be included in result.\n\n**includeDisabledFloorplans** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. Flag for implementing Disabled Floorplans on result.\n\n**includeDisabledUnits** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. Flag for implementing Disabled Units on result.\n\n**showUnitSpaces** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. showUnitSpaces\n\n**useSpaceConfiguration** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. Considered if the property has space configuration setup then the rate should return as per space configuration.\n\n**allowLeaseExpirationOverride** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. If '1' is sent then we should override any lease expiration limits aff ecting available units returned/ If '0' or node is missing then do cur rent default functionality\n\n**moveInStartDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. Desired move in start date for finding unit availability and pricing.\n\n**moveInEndDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. Desired move in end date for finding unit availability and pricing.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/propertyunits\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\n\\*\n\n**floorplanId** \\[Integer\\]\n\noptional\n\n**unitTypeId** \\[Integer\\]\n\noptional\n\n**propertyUnitId** \\[Integer\\]\n\noptional\n\n**availableUnitsOnly** \\[Boolean\\]\n\nOff \n\n**unavailableUnitsOnly** \\[Boolean\\]\n\nOff \n\n**skipPricing** \\[Boolean\\]\n\nOff \n\n**showChildProperties** \\[Boolean\\]\n\nOff \n\n**includeDisabledFloorplans** \\[Boolean\\]\n\nOff \n\n**includeDisabledUnits** \\[Boolean\\]\n\nOff \n\n**showUnitSpaces** \\[Boolean\\]\n\nOff \n\n**useSpaceConfiguration** \\[Boolean\\]\n\nOff \n\n**allowLeaseExpirationOverride** \\[Boolean\\]\n\nOff \n\n**moveInStartDate** \\[Date\\]\n\noptional\n\n**moveInEndDate** \\[Date\\]\n\noptional\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getUnitTypes",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Property Units](/api/v1/documentation/#Property_Units) » [getUnitTypes](#)\n==========================================================================================================\n\n[getUnitTypes](#)\n-----------------\n\nPulls a list of unit types. Rates returned are both active and web visible.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. propertyId\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/propertyunits\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyId** \\[Integer\\]\n\n\\*\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/sendAmenities",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Property Units](/api/v1/documentation/#Property_Units) » [sendAmenities](#)\n===========================================================================================================\n\n[sendAmenities](#)\n------------------\n\nInsert the amenities.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. This field accepts a single integer value for Property ID\n\n**name** \\[String\\]\n\nThis is an optional field. This field accepts single value. This accepts name of the amenity\n\n**description** \\[String\\]\n\nThis is an optional field. This field accepts single value. This accepts description of the amenity.\n\n**isPublished** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. This flag accepts 1 or 0 ,whether amenity needs to be published or not .\n\n**unitSpaceId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. This accepts unit space id for the amenity.\n\n **node** \\[Integer\\]\n\nThis indicates node serial number\n\n **status** \\[String\\]\n\nThis indicates status of the added amenity. It can be success or failu re depend upon request inputs.\n\n **amenityId** \\[Integer\\]\n\nThis shows amenity id.\n\n **rateAssociationId** \\[Integer\\]\n\nThis shows rateAssociationId of the added amenity.\n\n **name** \\[String\\]\n\nThis shows name of the added amenity\n\n **message** \\[String\\]\n\nThis shows result message. Eg:\"Amenity inserted successfully\" or \"Amen ity already exists with name\".\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/propertyunits\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/sendPropertyUnits",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Property Units](/api/v1/documentation/#Property_Units) » [sendPropertyUnits](#)\n===============================================================================================================\n\n[sendPropertyUnits](#)\n----------------------\n\nInsert the property units/unit space and other the required details.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* unitNumber** \\[String\\]\n\nThis is a required field. This field accepts single value. This node should accept the unitNumber.\n\n**unitPrefix** \\[String\\]\n\nThis is an optional field. This field accepts single value. This node should accept the unitNunber prefix\n\n**unitSuffix** \\[String\\]\n\nThis is an optional field. This field accepts single value. This node should accept the unitNumber suffix\n\n**spaceNumber** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. This node should accept the spaceNumber on added unit.\n\n**maxOccupants** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. This node should accepts the maxOccupants of the property units\n\n**maxPets** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. This node should accepts the maxPets of the property units\n\n**numberOfBedRooms** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. This node should accepts the beds number of the property units\n\n**numberOfBathRooms** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. This node should accepts the bathRooms of the property units\n\n**squareFeet** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. This node should accept the squareFeet of the property units\n\n**note** \\[String\\]\n\nThis is an optional field. This field accepts single value. This node should accept the note added for the property units\n\n**unitGenderId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. This node should accept the Id of the gender. The unitGenderId should be get from getPropertyPickLists.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/propertyunits\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/updateAmenities",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Property Units](/api/v1/documentation/#Property_Units) » [updateAmenities](#)\n=============================================================================================================\n\n[updateAmenities](#)\n--------------------\n\nThis service allows user to update the amenities (property/floorplan/unit type/unit space).\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* id** \\[Integer\\]\n\nThis is a required field. This field accepts single value. This node should accept the amenity id which needs to be updated\n\n**\\* name** \\[String\\]\n\nThis is a required field. This field accepts single value. This node should accept the amenity name.\n\n**description** \\[String\\]\n\nThis is an optional field. This field accepts single value. This node should accept the amenity description.\n\n**isPublished** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value.\n\n**isFeatured** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value.\n\n**showOnQuote** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. This node indicates if the amenities are visible on quotes or not. Th is flag is supported only for property and unit space amenities.\n\n**hideDescription** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value.\n\n**videoUrl** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**defaultAmenityId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**amenityId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n **node** \\[Integer\\]\n\n **status** \\[String\\]\n\n **amenityId** \\[Integer\\]\n\n **message** \\[String\\]\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/propertyunits\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getResponse",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Queue](/api/v1/documentation/#Queue) » [getResponse](#)\n=======================================================================================\n\n[getResponse](#)\n----------------\n\nThis service will return the data of the report. For 'queueId' user needs to execute the getReportData(r3) API.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* queueId** \\[String\\]\n\nThis is a required field. This field accepts single value. This node accepts the queueId. This should be a JWT token. This token should get generated from the getReportData(r3) version.\n\n**\\* serviceName** \\[String\\]\n\nThis is a required field. This field accepts single value. This node accepts the service name for which the apiToken is added.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/queue\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**queueId** \\[String\\]\n\n\\*\n\n**serviceName** \\[String\\]\n\n\\*\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getDependentFilter",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Reports](/api/v1/documentation/#Reports) » [getDependentFilter](#)\n==================================================================================================\n\n[getDependentFilter](#) Version 1 Version 2\n-------------------------------------------\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Change Logs](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* reportName** \\[String\\]\n\nThis is a required field. This field accepts single value. Once passing this parameter web service will return values of the depe ndent filter for that report.\n\n**\\* dependentFilter** \\[String\\]\n\nThis is a required field. This field accepts single value. We will be getting values of these filters in response, that are depen dent on the parent fields that would be mentioned in 'filters' section .\n\n**\\* filters** \\[String\\]\n\nThis is a required field. This field accepts single value. Here parent filters are mentioned considering those values of dependen t filters will be getting in the response of this web service.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/reports\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\nVersion 2\n\n\\- We have removed the 'isArray' , 'required' flags, '@attribute' and 'value'.  \n\\- For multiple select we are now using an Array \"\\[\\]\". Example: \"property\\_group\\_ids\":\\[xxxx,xxxx\\]  \n\\- For single select we are now using a String. Example: \"period\\_type\": \"date\"."
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getReportData",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Reports](/api/v1/documentation/#Reports) » [getReportData](#)\n=============================================================================================\n\n[getReportData](#)\n------------------\n\nThis webservice will return 'queueId' that will be used in the getReponse API to pull the data for a specific report. Please use the getReportInfo webservice to get all the filters for a report. In order to run this webservice, you will have to provide the reportName along with all the filters for a report.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Change Logs](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* reportName** \\[String\\]\n\nThis is a required field. This field accepts single value. Once passing this parameter web service will return report data for th at report.\n\n**reportVersion** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Will filter result as per the report available report versions.\n\n**\\* filters** \\[String\\]\n\nThis is a required field. This field accepts single value. For each report there are filter parameters that are required, like pr operty id, dates etc. You can get filters for each report using the ge tReportsInfo webservice.\n\n **queueId** \\[String\\]\n\nThis will a JWT token return based on the request passed.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/reports\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\nVersion 3\n\n\\- getReportData no longer returns report data in real-time.  Upon a successful request, a queueId (token) will be returned in the response.  This token can then be used in the getResponse API which will check if the report has finished generating and if so it will return the report data.  If the report has not finished generating it will return a message that the request is still in process."
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getReportInfo",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Reports](/api/v1/documentation/#Reports) » [getReportInfo](#)\n=============================================================================================\n\n[getReportInfo](#)\n------------------\n\nReturns information about a specific report. This will also return information about various filters associated with a report.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n*   [Change Logs](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* reportName** \\[String\\]\n\nThis is a required field. This field accepts comma seperated multiple values. This will return the report details.\n\n**reportVersion** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Will filter result as per the available report versions\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/reports\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**reportName** \\[String\\]\n\n\\*\n\n**reportVersion** \\[Integer\\]\n\noptional\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here\n\nVersion 2\n\n\\- We have removed the 'isArray' , 'required' flags, '@attribute' and 'value'.  \n\\- For multiple select we are now using an Array \"\\[\\]\". Example: \"property\\_group\\_ids\":\\[xxxx,xxxx\\]  \n\\- For single select we are now using a String. Example: \"period\\_type\": \"date\"."
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getReportList",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Reports](/api/v1/documentation/#Reports) » [getReportList](#)\n=============================================================================================\n\n[getReportList](#)\n------------------\n\nThis webservice returns list of all reports that are available for the reports API. This webservice will return the report name along with the system report name. Using the value from reportName field you will be able to get all the details about this report using the getReportInfo webservice.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\nNo Parameters required.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/reports\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\nNo Parameters required.\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getInvoices",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Vendors](/api/v1/documentation/#Vendors) » [getInvoices](#)\n===========================================================================================\n\n[getInvoices](#) Version 1 Version 2\n------------------------------------\n\nThis version will Include standard, catalog and job cost details in API.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n*   [Change Logs](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**ids** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values.\n\n**invoiceNumber** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**vendorIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values.\n\n**propertyIds** \\[String\\]\n\nThis is an optional field. This field accepts comma seperated multiple values.\n\n**fromDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. This is based on the Post Date of the invoice.\n\n**toDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. This is based on the Post Date of the invoice.\n\n**paidInvoiceFromDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. filters the invoices which have the payment applied to them on or afte r the given date.\n\n**paidInvoiceToDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. we are showing the invoices which have the payment applied to them on or before the given date.\n\n**postMonth** \\[Date\\]\n\nThis is an optional field. This field accepts single value.\n\n**includeVoidedPayments** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. Returns voided payment details if provided as 1\n\n**voidedPaymentFromDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value.\n\n**voidedPaymentToDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value.\n\n**includeExported** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value.\n\n**customerRefunds** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value.\n\n**invoiceTypeIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/vendors\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**ids** \\[Integer\\]\n\noptional\n\n**invoiceNumber** \\[Integer\\]\n\noptional\n\n**vendorIds** \\[Integer\\]\n\noptional\n\n**propertyIds** \\[String\\]\n\noptional\n\n**fromDate** \\[Date\\]\n\noptional\n\n**toDate** \\[Date\\]\n\noptional\n\n**paidInvoiceFromDate** \\[Date\\]\n\noptional\n\n**paidInvoiceToDate** \\[Date\\]\n\noptional\n\n**postMonth** \\[Date\\]\n\noptional\n\n**includeVoidedPayments** \\[Boolean\\]\n\nOff \n\n**voidedPaymentFromDate** \\[Date\\]\n\noptional\n\n**voidedPaymentToDate** \\[Date\\]\n\noptional\n\n**includeExported** \\[Boolean\\]\n\nOff \n\n**customerRefunds** \\[Boolean\\]\n\nOff \n\n**invoiceTypeIds** \\[Integer\\]\n\noptional\n\n**Request URL Parameter:**\n\n**Page Number**\n\n**Page Size**\n\n**Request Header:**\n\n**Send Pagination Links in Response Body**\n\nOff \n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here\n\nVersion 2\n\nThis version will Include standard, catalog and job cost type invoice details in API."
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getPoReceivingRecords",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Vendors](/api/v1/documentation/#Vendors) » [getPoReceivingRecords](#)\n=====================================================================================================\n\n[getPoReceivingRecords](#)\n--------------------------\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**vendorId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. If 'vendorId' is provided then 'vendorCode' and 'purchaseOrderNumbers' are not required.\n\n**vendorCode** \\[String\\]\n\nThis is an optional field. This field accepts single value. If 'vendorCode' is provided then 'vendorId' and 'purchaseOrderNumbers' are not required.\n\n**purchaseOrderNumbers** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. If 'purchaseOrderNumbers' is provided then 'vendorId' and 'vendorCode' are not required.\n\n**poFromDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. poFromDate and poToDate max range of 1 year\n\n**poToDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. poFromDate and poToDate max range of 1 year\n\n**receivedFromDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. if dates are provided in filter then vendorId, vendorCode or PO number s are not required, receivedFromDate and receivedToDate max range of 1 year\n\n**receivedToDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value. if dates are provided in filter then vendorId, vendorCode or PO number s are not required, receivedFromDate and receivedToDate max range of 1 year\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/vendors\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**vendorId** \\[Integer\\]\n\noptional\n\n**vendorCode** \\[String\\]\n\noptional\n\n**purchaseOrderNumbers** \\[Integer\\]\n\noptional\n\n**poFromDate** \\[Date\\]\n\noptional\n\n**poToDate** \\[Date\\]\n\noptional\n\n**receivedFromDate** \\[Date\\]\n\noptional\n\n**receivedToDate** \\[Date\\]\n\noptional\n\n**Request URL Parameter:**\n\n**Page Number**\n\n**Page Size**\n\n**Request Header:**\n\n**Send Pagination Links in Response Body**\n\nOff \n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getPurchaseOrders",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Vendors](/api/v1/documentation/#Vendors) » [getPurchaseOrders](#)\n=================================================================================================\n\n[getPurchaseOrders](#)\n----------------------\n\ngetPurchaseOrders\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**propertyIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values.\n\n**vendorId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**vendorCode** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**poNumber** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**poNumbers** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values.\n\n**receivedFromDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value.\n\n**receivedToDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value.\n\n**createdOnFrom** \\[Date\\]\n\nThis is an optional field. This field accepts single value.\n\n**createdOnTo** \\[Date\\]\n\nThis is an optional field. This field accepts single value.\n\n**poStatusIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values.\n\n**poTypeIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values.\n\n**purchaseOrderApprovalTypeIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/vendors\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyIds** \\[Integer\\]\n\noptional\n\n**vendorId** \\[Integer\\]\n\noptional\n\n**vendorCode** \\[Integer\\]\n\noptional\n\n**poNumber** \\[Integer\\]\n\noptional\n\n**poNumbers** \\[Integer\\]\n\noptional\n\n**receivedFromDate** \\[Date\\]\n\noptional\n\n**receivedToDate** \\[Date\\]\n\noptional\n\n**createdOnFrom** \\[Date\\]\n\noptional\n\n**createdOnTo** \\[Date\\]\n\noptional\n\n**poStatusIds** \\[Integer\\]\n\noptional\n\n**poTypeIds** \\[Integer\\]\n\noptional\n\n**purchaseOrderApprovalTypeIds** \\[Integer\\]\n\noptional\n\n**Request URL Parameter:**\n\n**Page Number**\n\n**Page Size**\n\n**Request Header:**\n\n**Send Pagination Links in Response Body**\n\nOff \n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getTaxFormData",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Vendors](/api/v1/documentation/#Vendors) » [getTaxFormData](#)\n==============================================================================================\n\n[getTaxFormData](#)\n-------------------\n\nThis web service returns Property management company vendors information and 1099 tax form data.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**propertyIds** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**\\* startDate** \\[Date\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* endDate** \\[Date\\]\n\nThis is a required field. This field accepts single value.\n\n**generateForPropertyOwner** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. If provided as '0' then payer will render property info & If provided as '1' then Payer node will render the property owners info\n\n**ownerIds** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**isForIndirectOwner** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. If provided false, it will return data only for direct owners. If prov ided true, it will return data for both direct & indirect owners.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/vendors\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyIds** \\[String\\]\n\noptional\n\n**startDate** \\[Date\\]\n\n\\*\n\n**endDate** \\[Date\\]\n\n\\*\n\n**generateForPropertyOwner** \\[Boolean\\]\n\nOff \n\n**ownerIds** \\[String\\]\n\noptional\n\n**isForIndirectOwner** \\[Boolean\\]\n\nOff \n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getVendorLocations",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Vendors](/api/v1/documentation/#Vendors) » [getVendorLocations](#)\n==================================================================================================\n\n[getVendorLocations](#)\n-----------------------\n\nPulls a list of VendorLocations\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**propertyIds** \\[String\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. List of comma separated propertyIds\n\n**showAllStatus** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. Boolean parameter to retrieve all vendors irrespective of status.\n\n**includeIntercompanyVendors** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. If provided as '0' then 'Standard' types of Vendors will be rendered a nd if provided as '1' then 'Standard' and 'Intercompany' types of Vend ors will be returned.\n\n**vendorId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Provides details based on provided VendorId\n\n**vendorName** \\[String\\]\n\nThis is an optional field. This field accepts single value. Provides details based on provided VendorName\n\n**vendorCode** \\[String\\]\n\nThis is an optional field. This field accepts single value. Provides details based on provided VendorCode\n\n**lastModifiedOn** \\[Date\\]\n\nThis is an optional field. This field accepts single value. Returns results based on the LastModifiedOn date of the vendor or any of its locations, contacts, remittances or legal entities.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/vendors\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**propertyIds** \\[String\\]\n\noptional\n\n**showAllStatus** \\[Boolean\\]\n\nOff \n\n**includeIntercompanyVendors** \\[Boolean\\]\n\nOff \n\n**vendorId** \\[Integer\\]\n\noptional\n\n**vendorName** \\[String\\]\n\noptional\n\n**vendorCode** \\[String\\]\n\noptional\n\n**lastModifiedOn** \\[Date\\]\n\noptional\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getVendorPickLists",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Vendors](/api/v1/documentation/#Vendors) » [getVendorPickLists](#)\n==================================================================================================\n\n[getVendorPickLists](#)\n-----------------------\n\nThis web service will return pick list.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\nNo Parameters required.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/vendors\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\nNo Parameters required.\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/getVendors",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Vendors](/api/v1/documentation/#Vendors) » [getVendors](#)\n==========================================================================================\n\n[getVendors](#)\n---------------\n\nThis service returns vendor records based on the vendorIds or vendorCodes provided.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Try Yourself](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**vendorIds** \\[Integer\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. Once passing this parameter web service will return Vendor details for those Vendor Ids. Conditional mandatory, If vendorIds are provided t hen vendorsCodes is not required.\n\n**vendorCodes** \\[String\\]\n\nThis is an optional field. This field accepts comma seperated multiple values. Conditional mandatory, If \"vendorsCodes\" are provided then \"vendorIds \" are not required.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/vendors\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n**Request Parameter:**\n\n**Username**\n\n\\*\n\n**Password**\n\n\\*\n\n**vendorIds** \\[Integer\\]\n\noptional\n\n**vendorCodes** \\[String\\]\n\noptional\n\nRequest Type\n------------\n\nJSON  XML\n\nRequest URL\n-----------\n\nRequest Headers\n---------------\n\nRequest Headers will be shown here\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nRequest code will be shown here\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\n    Response code will be shown here\n\nResponse Headers\n----------------\n\n![](https://commoncf.entrata.com/images/loading_img.gif)\n\nResponse Headers will be shown here"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/markInvoicesExported",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Vendors](/api/v1/documentation/#Vendors) » [markInvoicesExported](#)\n====================================================================================================\n\n[markInvoicesExported](#)\n-------------------------\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* lineItemId** \\[Integer\\]\n\nThis is a required field. This field accepts comma seperated multiple values.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/vendors\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/sendInvoices",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Vendors](/api/v1/documentation/#Vendors) » [sendInvoices](#)\n============================================================================================\n\n[sendInvoices](#) Version 1 Version 2\n-------------------------------------\n\nInserts invoice batch for a vendor.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n*   [Change Logs](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* ApPayeeId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Child element of ApHeader. Id of a vendor who generated the invoice.\n\n**\\* ApPayeeLocationId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Child element of ApHeader. Location Id of a vendor who generated the i nvoice.\n\n**\\* InvoiceTotal** \\[Float\\]\n\nThis is a required field. This field accepts single value. Child element of ApHeader. Total amount of invoice.\n\n**\\* InvoiceNumber** \\[String\\]\n\nThis is a required field. This field accepts single value. Child element of ApHeader. Invoice Number.\n\n**\\* InvoiceDate** \\[Date\\]\n\nThis is a required field. This field accepts single value. Child element of ApHeader. Invoice date. Must be of format MM/DD/YYYY.\n\n**IsConsolidated** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. Child element of ApHeader.\n\n**IsOnHold** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. Child element of ApHeader.\n\n**\\* PropertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Child element of ApDetail.\n\n**\\* GlAccountId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Child element of ApDetail.\n\n**\\* Description** \\[String\\]\n\nThis is a required field. This field accepts single value. Child element of ApDetail.\n\n**Quantity** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Child element of ApDetail.\n\n**\\* Rate** \\[Float\\]\n\nThis is a required field. This field accepts single value. Child element of ApDetail.\n\n**IsWaive1099** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. Child element of ApDetail.\n\n**FileData** \\[String\\]\n\nThis is an optional field. This field accepts single value. Child element of File. Base64 encoded file data.\n\n**Note** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\n**DueDate** \\[Date\\]\n\nThis is an optional field. This field accepts single value.\n\n**PostMonth** \\[Date\\]\n\nThis is an optional field. This field accepts single value.\n\n**IsPaused** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. Child element of ApBatch.\n\n**InvoiceImageUrl** \\[String\\]\n\nThis is an optional field. This field accepts single value. InvoiceImageUrl accepts valid URL only.\n\n**IsPosted** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. IsPosted allows inserting posted invoices.\n\n**PropertyBuildingId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Child element of ApDetail.\n\n**PropertyUnitId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Child element of ApDetail.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/vendors\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`\n\n\t\t\t\t\t\n\t\t\t\t\n\nVersion 2\n\n*   We now support association of one payment with multiple invoices.\n*   Now, If we fail to insert payment record the associated invoice will also not be inserted to avoid partial success and confusion and the failure is mentioned in the response with the payment details.\n*   This version supports association of Purchase Order with Invoice on line item level using nodes 'poDetailId' and 'receivingRecordId'.\n*   We can specify the 'Invoice Type' with 'invoiceTypeId' node in this version."
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/sendPurchaseOrders",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Vendors](/api/v1/documentation/#Vendors) » [sendPurchaseOrders](#)\n==================================================================================================\n\n[sendPurchaseOrders](#)\n-----------------------\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* poTypeId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Supports purchase order types 4 and 19 ('Standard' and 'Standard-Job/ Contract' respectively).\n\n**\\* apPayeeId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Child element of apHeader. Id of a vendor.\n\n**\\* apPayeeLocationId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Child element of apHeader. Location Id of a vendor.\n\n**apPayeeAccountId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Child element of apHeader. If not passed in the request, the system d efault account will be used.\n\n**\\* postMonth** \\[Date\\]\n\nThis is a required field. This field accepts single value. Accepts date in MM/YYYY format.\n\n**\\* postDate** \\[Date\\]\n\nThis is a required field. This field accepts single value. Child element of apHeader.\n\n**routingTagId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Child element of apHeader.\n\n**headerMemo** \\[String\\]\n\nThis is an optional field. This field accepts single value. Child element of apHeader.\n\n**shipping** \\[Float\\]\n\nThis is an optional field. This field accepts single value. This will specify the shipping amount.\n\n**discount** \\[Float\\]\n\nThis is an optional field. This field accepts single value. This will specify the discount amount.\n\n**salesTax** \\[Float\\]\n\nThis is an optional field. This field accepts single value. This will specify the sales tax of the invoice.\n\n**glAccountId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Child element of apDetail.This is required if po type is standard.\n\n**apCodeId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. This is child element of apDetails. This is required if po type is job costing.\n\n**jobPhaseId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. This is child element of apDetails. This is required if po type is job costing.\n\n**apContractId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. This is child element of apDetails.\n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Child element of apDetail.\n\n**\\* quantity** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Child element of apDetail.\n\n**\\* rate** \\[Float\\]\n\nThis is a required field. This field accepts single value. Child element of apDetail.\n\n**glDimensionId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Child element of apDetail. Custom Tags.\n\n**companyDepartmentId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Child element of apDetail.\n\n**propertyUnitId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Child element of apDetail.\n\n**propertyBuildingId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Child element of apDetail.\n\n**isConfidential** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. Accepts '0' or '1' Only.\n\n**isTaxable** \\[Boolean\\]\n\nThis is an optional field. This field accepts single value. Accepts '0' or '1' Only.\n\n**description** \\[String\\]\n\nThis is an optional field. This field accepts single value.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/vendors\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/sendVendors",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Vendors](/api/v1/documentation/#Vendors) » [sendVendors](#)\n===========================================================================================\n\n[sendVendors](#)\n----------------\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* businessName** \\[String\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* nameOnTaxReturn** \\[String\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* remittanceName** \\[String\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* apPaymentTypeId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* nameOnAccount** \\[String\\]\n\nThis is a required field. This field accepts single value. Required only when the payment type is ACH(eCheck)\n\n**\\* routingNumber** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Required only when the payment type is ACH(eCheck). Must be numeric wi th 9 digits long.\n\n**\\* accountNumber** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Required only when the payment type is ACH(eCheck)\n\n**\\* contact** \\[String\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* firstName** \\[String\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* lastName** \\[String\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* name** \\[String\\]\n\nThis is a required field. This field accepts single value. Accepts the location name\n\n**\\* isPrimary** \\[Boolean\\]\n\nThis is a required field. This field accepts single value.\n\n**utilityBillReceiptTypeId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\n**\\* externalId** \\[String\\]\n\nThis is a required field. This field accepts single value. externalId\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/vendors\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/updateInvoices",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Vendors](/api/v1/documentation/#Vendors) » [updateInvoices](#)\n==============================================================================================\n\n[updateInvoices](#)\n-------------------\n\nThis webservice allows you to update an existing invoice in Entrata.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* id** \\[Integer\\]\n\nThis is a required field. This field accepts single value. Accepts apHeader id,apDetail id\n\n**\\* invoicePaymentId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* paymentAmount** \\[Float\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* paymentTypeId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* paymentNumber** \\[String\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* paymentDate** \\[Date\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* postMonth** \\[Date\\]\n\nThis is a required field. This field accepts single value.\n\n**isOnHold** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Update an invoice that is on hold, and take it off hold, and vice vers a, Allowed values ( 0, 1 )\n\n**routingTagId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. Update the routing tag on an invoice, to another valid routing tag. Al low for not posted and off hold invoice.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/vendors\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/updateVendors",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Vendors](/api/v1/documentation/#Vendors) » [updateVendors](#)\n=============================================================================================\n\n[updateVendors](#)\n------------------\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**\\* vendorId** \\[Integer\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* nameOnTaxReturn** \\[String\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* name** \\[String\\]\n\nThis is a required field. This field accepts single value. Accepts locations name.\n\n**\\* legalEntityName** \\[String\\]\n\nThis is a required field. This field accepts single value. required if new location is inserted\n\n**\\* propertyId** \\[Integer\\]\n\nThis is a required field. This field accepts single value. attribute compliance\\_status\\_id is required to make the property compli ant/non compliant, Accept integer value 2( for non-compliant) or 5 (fo r compliant) only.\n\n**\\* remittanceName** \\[String\\]\n\nThis is a required field. This field accepts single value.\n\n**\\* nameOnAccount** \\[String\\]\n\nThis is a required field. This field accepts single value. required, if Remittance Type is ACH (eCheck) (i.e. apPaymentTypeId = 5 )\n\n**\\* routingNumber** \\[Integer\\]\n\nThis is a required field. This field accepts single value. required, if Remittance Type is ACH (eCheck) (i.e. apPaymentTypeId = 5 )\n\n**\\* accountNumber** \\[Integer\\]\n\nThis is a required field. This field accepts single value. required, if Remittance Type is ACH (eCheck) (i.e. apPaymentTypeId = 5 )\n\n**\\* externalId** \\[String\\]\n\nThis is a required field. This field accepts single value. ExternalId\n\n**defaultRoutingTagId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value.\n\nNo Parameters Found.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/vendors\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/voidApPayments",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\n[API](/api/v1/documentation) » [Vendors](/api/v1/documentation/#Vendors) » [voidApPayments](#)\n==============================================================================================\n\n[voidApPayments](#)\n-------------------\n\nThis webservice allows users to mark the AP Payments voided.\n\n*   [Parameters](javascript:void\\(0\\);)\n*   [Example](javascript:void\\(0\\);)\n\n  \n\n*   [Request](javascript:void\\(0\\);)\n*   Response\n\n  \n\n**paymentId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. This is a conditional mandatory node. If the value for paymentNumber, paymentBankAccountId, paymenttypeId, paymentAmount are not provided.\n\n**paymentNumber** \\[String\\]\n\nThis is an optional field. This field accepts single value. This is a conditional mandatory node. If the value for paymentId is no t provided then this node is required.\n\n**paymentBankAccountId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. This is a conditional mandatory node. If the value of paymentId is not provided then this node is required.\n\n**paymentTypeId** \\[Integer\\]\n\nThis is an optional field. This field accepts single value. This is a conditional mandatory node. If the value of paymentId is not provided then this node is required.\n\n**paymentAmount** \\[Float\\]\n\nThis is an optional field. This field accepts single value. This is a conditional mandatory node. If the value of paymentId is not provided then this node is required.\n\n**\\* voidDate** \\[Date\\]\n\nThis is a required field. This field accepts single value. Supported date format: MM/DD/YYY, M/D/YYYY, YYYY-MM-DD.\n\n**\\* postMonth** \\[Date\\]\n\nThis is a required field. This field accepts single value. Supported Format: MM/YYYY\n\n**\\* note** \\[String\\]\n\nThis is a required field. This field accepts single value. Memo for the payment\n\n **node** \\[Integer\\]\n\nThis node holds the sequence number with reference to the payments pro vided in the request.\n\n **status** \\[String\\]\n\nThis node holds two values: 'Success' and ' Failure'.\n\n **message** \\[String\\]\n\nThis node will display the success message or validation message.\n\n **paymentTypeId** \\[Integer\\]\n\nThis node will get return only if the payment is successfully voided.\n\n **paymentNumber** \\[String\\]\n\nThis node will get return only if the payment is successfully voided.\n\nRequest URL\n-----------\n\n  \n\nhttps://gmhcommunities.entrata.com/api/v1/vendors\n\nRequest Type\n------------\n\n  \n\nJSON  XML\n\nRequest [Copy to Clipboard](javascript:void\\(0\\);)\n--------------------------------------------------\n\nResponse [Copy to Clipboard](javascript:void\\(0\\);)\n---------------------------------------------------\n\n*   [.Net](javascript:void\\(0\\);)\n*   Java\n*   PHP\n\n  \n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     /* Initiate a Web Request object */ HttpWebRequest webRequest = null; webRequest = WebRequest.Create(' **REPLACE THIS WITH THE WEB SERVICE URL** ') as HttpWebRequest; webRequest.Method = 'POST'; webRequest.Headers.Add(\"Authorization\", \"Basic \");  /* Add Form data */  FileInfo fi = new FileInfo(@\"E:\\RabitMQ\\Learn RabbitMQ With C.pdf\"); string fileName = fi.Name; byte[] fileContents = File.ReadAllBytes(fi.FullName);  string boundary = \"--AaB03x\";  StringBuilder sb = new StringBuilder();  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestBody\")); sb.AppendLine(); sb.AppendLine(xmlRequest);  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: form-data; name=\\\"{0}\\\"\", \"requestContentType\")); sb.AppendLine(); sb.AppendLine(\"application/xml; CHARSET=UTF-8\");  sb.AppendLine(boundary); sb.AppendLine(string.Format(\"Content-Disposition: file; name=\\\"{0}\\\"; filename=\\\"{1}\\\"\", \"file1\", fileName)); sb.AppendLine(\"Content-Type: application/octet-stream\"); sb.AppendLine(); sb.AppendLine(Encoding.UTF8.GetString(fileContents)); sb.AppendLine(boundary);  /* Initiate the request writer */ StreamWriter requestWriter = new StreamWriter(webRequest.GetRequestStream());   /* If you want to send an XML Request, use these options */ webRequest.ContentType = \"multipart/form-data; boundary=AaB03x\"; requestWriter.Write(xmlRequest);   /* If you want to send an JSON Request, use these options */ webRequest.ContentType = 'multipart/form-data; boundary=AaB03x'; requestWriter.Write(jsonRequest);   requestWriter.Close();   /* Read the response */ StreamReader responseReader = new StreamReader(webRequest.GetResponse().GetResponseStream()); string responseData = responseReader.ReadToEnd(); responseReader.Close();`\n\n\t\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '';    /* An Example JSON Request */ string jsonRequest = '';     import java.io.InputStream; import org.apache.commons.httpclient.HttpClient;  public class PostExample {  public static void main(String[] args){  HttpClient httpClient = new DefaultHttpClient();  try { HttpPost request = new HttpPost(\"**REPLACE THIS WITH THE WEB SERVICE URL**\"); request.addHeader(\"Authorization\", \"Basic **<BASE64 ENCODED VALUE OF USERNAME:PASSWORD>**\"); request.addHeader(\"content-type\", \"multipart/form-data\");  File file1 = new File(\"[/path/to/upload]\");  MultipartEntityBuilder builder = MultipartEntityBuilder.create(); builder.addBinaryBody( \"file1\", new FileInputStream( file1 ), ContentType.APPLICATION_OCTET_STREAM, file1.getName() );  /* If you want to send an XML Request, use these options */ builder.addTextBody( \"requestBody\", xmlRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/XML; CHARSET=UTF-8\" );  /* If you want to send an JSON Request, use these options */ builder.addTextBody( \"requestBody\", jsonRequest ); builder.addTextBody( \"requestContentType\", \"APPLICATION/JSON; CHARSET=UTF-8\" );  HttpEntity multipartFormData = builder.build(); request.setEntity( multipartFormData );  HttpResponse response = httpClient.execute(request);  // handle response here... System.out.println(response); }catch (Exception ex) { // handle exception here ex.printStackTrace(); } finally { httpClient.getConnectionManager().shutdown(); } } }`\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n`/* An Example XML Request */ string xmlRequest = '' ;    /* An Example JSON Request */ $jsonRequest = '' ;     $resCurl = curl_init();    curl_setopt( $resCurl, CURLOPT_POST, true ); curl_setopt( $resCurl, CURLOPT_URL, **REPLACE THIS WITH THE WEB SERVICE URL** ); curl_setopt( $resCurl, CURLOPT_RETURNTRANSFER, 1 );    $strFirstFileName = '<filename with path>'; $strSecondFileName = '<filename with path>'; if( true == function_exists( 'curl_file_create' ) ) { $strFirsFilePath = curl_file_create( $strFirstFileName ); $strSecondFilePath = curl_file_create( $strSecondFileName ); } else { $strFirsFilePath = '@' . realpath( $strFirstFileName ); $strSecondFilePath = '@' . realpath( $strSecondFileName ); }    /* If you want to send an XML Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/XML; CHARSET=UTF-8', 'requestBody' => $xmlRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ]; /* If you want to send a JSON Request, use these options */ $arrmixPost = [ 'requestContentType' => 'APPLICATION/JSON; CHARSET=UTF-8', 'requestBody' => $jsonRequest, 'file1' => $strFirsFilePath, 'file2' => $strSecondFilePath ];    curl_setopt( $resCurl, CURLOPT_HTTPHEADER,  array( 'Content-type: multipart/form-data', 'Authorization: Basic <BASE64 ENCODED VALUE OF USERNAME:PASSWORD>'  ) ); curl_setopt( $resCurl, CURLOPT_POSTFIELDS, $arrmixPost ); $result = curl_exec( $resCurl ); if( false === $result ) { echo 'Curl error: ' . curl_error( $resCurl ); curl_close( $resCurl ); } else { curl_close( $resCurl ); echo $result; }`"
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\nAPI\n===\n\nEntrata provides a number of web services in our integrations with various third-party applications. In order to provide clear, example-rich view of our API, we've documented many elements below. You are welcome to review the web service information provided and visit our [Code Snippet](/api/v1/documentation/code-snippet) section for examples and references detailing our web services in several programming languages.\n\nPlease note that unless stated otherwise, all dates and times used in the API are assumed to be in Mountain Time (MST or MDT).\n\nThe Accept-Language request header parameter can be used to request that the values returned in the response be translated into the language and locale that is desired, provided that the language is active and enabled for the client. Possible values are: \\[ en-US, en-CA, en-GB, es-MX, es-PE, hi-IN, zh-CN, en-IE, es-US, es-ES, fr-FR, es-CL \\].\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n    This API will specify the API health status whether it is running or not.\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    Provides a library of functions to retrieve or send applications.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    This service will insert applications.\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    This service will insert or update the pets on an application. Please note that any applicable fees will also be applied based on the property fee structure.\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    Add Vehicle details to an application\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n    This service allows users to update the application.\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    Provides method to retrieve AR codes for a specified management company.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n    Returns all AR codes for a specified management company\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    Provides a library of functions to process electronic transactions.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n    Retrieves AR payments details with reference to a Payment ID and for a selected date range.\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    Provides a library of functions to retrieve or send resident transactions.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    This API is to get the information of Ar Invoices along with transactions and payments.\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    Retrieves a list of all transactions for a given lease\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    Retrieves list of all transactions for a given lease.\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n    Inserts lease AR transaction charges.\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n    Pulls the marketing contact type preferences for a customer and what they have opted in or out of. Note that for SMS, if the customer does not have a mobile number entered Entrata, no SMS preferences will be returned.\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    Provides a library of functions to retrieve or send customers information.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    Retrieves list of customers for a property. By default, this webservice returns residents where their lease status is Current or Notice.\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    Retrieves list of customer testimonials for a property.\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    Pick lists for Testimonials\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    Searches customers for a property.\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    Inserts resident reviews and ratings.\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    This service allows the user to update a customers' basic information. Requires the customer's lease status to be at least Applicant or above.\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    updateCustomerTestimonials\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    Provides a library of functions to retrieve or send financial information.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    This service will fetch job cost codes.\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    retrieve bank accounts for particular management company.\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    API pull's details of the budget from Entrata.\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    financial picklist\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    Returns all GL transactions for a property. By default the webservice returns summarized transactions.\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    Retrieves GL accounts information.\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    This service will fetch job categories\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    This service will fetch job cost budgets.\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    Returns the job details added on the jobCosting\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    Returns the transactionCustomTags and transactionRoutingTags\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    Marks the provided GL transactions as exported under the API export type. Does not impact being able to export the same transactions in other export types using other Entrata GL Export formats.\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    Inserts the Journal Entries.\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    Provides a library of functions to retrieve or send leads information.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    Apply quote to the application\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    Generates quotes for the application.\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    Pulls a list of Ids required for other lead services\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    Retrieves a list of leads of all status types. This web service uses Lead Management 3.0 MITS specifications.\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    Retrieves a list of prospect quotes from Entrata.\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    Inserts new Guest Card.\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    Inserts new Guest Cards. This web service uses Lead Management 3.0 MITS specifications. Please note that this service is being replaced by the sendLeads API and will eventually not be supported by Entrata.\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n    It is use to update the lead.\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    Provides a library of functions to retrieve or send leases information.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    Cancelling a lease which is in future status with unit and unit spaces associated with it.\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    Returns a list of expiring leases\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    Pulls list of lease documents.\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    Pulls the list of lease documents.\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    Pulls a list of Ids required for other leases services\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    Retrieves lease or application information. By default, this webservice returns leases that are in Current and Notice lease status. This endpoint is paginated, for pagination details check the response headers.\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    Retrieves the collection data.\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    Retrieves lease or application information.This web service uses Lease/Application 3.0 MITS specifications. By default, this webservice returns leases which are in Current and Notice lease status.\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    web service will return active as well as inactive packages.\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    moveOutLease\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    onNoticeLease\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    This API can be used to upload documents onto Entrata leases such as application, lease, policy, agreement documents. This API accepts files as a form file upload and the Content-Type should be \"multipart/form-data\". Please see the \"Code Snippet\" tab for more technical details and some sample code examples.\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    To insert the roommate groups.\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    sendScheduledCharges\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    This service allows the user to update the lease's basic required information and occupants.\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n    updateScheduledCharges\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    Provides a library of functions to retrieve or send work orders (maintenance requests) related information.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    We are fetching inspection templates based on the input provided in the request.\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    Pulls a list of Ids required for other workorder services\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    Retrieves work orders information.\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    Inserts new work orders.\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n    Update the work orders.\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    Provides a library of functions for retrieving pricing related information.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    Retrieves picklist of id/name for the \"CASCADE\", \"ORIGIN\" and \"TRIGGER\" from the company.\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    insertPricing allows updating pricing at a different level with multiple combinations. All nodes create a number of combinations and depending on the property setup API accepts the data. E.g If the property has the setup to accept term wise pricing then only API can accept the allowed terms under the node \"leaseTermMonths\". Please note that this API is designed for Conventional property type and may not work for other property types.\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n    sendBudgetedRent insert rates for unavailable units.\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    Provides a library of functions to retrieve property related information.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    getAmenityReservations\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    This API pulls information about the property calendar such as general staff and tour hours of operation, allowed length of appointments, and provides the open calendar time slots as per the dates.\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    Retrieves list of floor plans for a property.\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    Pulls a list of Pet types\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    Retrieves properties details for the management company.\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    Retrieves announcements associated to property.\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    Version R2 for getPropertyPickLists. Converted the parameters from attribute to Nodes.\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    Retrieves list of rentable items for a property.\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    getReservableAmenities\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    getWebSites\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    Insert the floorplans\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n    To insert the Rentable Items in to Entrata\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    Provides a library of functions to retrieve or send all property units related information.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    Pulls a list of Amenities\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    Retrieves property, floorplans, unit types, units, unit availability and pricing etc. information. This web service uses Property Marketing 3.0 MITS specifications. NOTE: For new projects, please do not use this service and instead use \"getPropertyUnits\" which is the updated version of this service but no longer supports the MITS standards.\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    Retrieves property, floorplans, unit types, units, unit availability and pricing, etc. information. If the property requested is a parent property with related child or phased properties then those properties will be found in subsequent pages and can be requested using the page specific URLs provided in the response headers.\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    Pulls a Specials/Concessions for the property passed.\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    Pulls a list of Unit availability and their pricing\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    Pulls a list of unit types. Rates returned are both active and web visible.\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    Insert the amenities.\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    Insert the property units/unit space and other the required details.\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n    This service allows user to update the amenities (property/floorplan/unit type/unit space).\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n    This service will return the data of the report. For 'queueId' user needs to execute the getReportData(r3) API.\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    Provides a library of functions to retrieve reports.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    This webservice will return 'queueId' that will be used in the getReponse API to pull the data for a specific report. Please use the getReportInfo webservice to get all the filters for a report. In order to run this webservice, you will have to provide the reportName along with all the filters for a report.\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    Returns information about a specific report. This will also return information about various filters associated with a report.\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n    This webservice returns list of all reports that are available for the reports API. This webservice will return the report name along with the system report name. Using the value from reportName field you will be able to get all the details about this report using the getReportInfo webservice.\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    Provides a library of functions to retrieve or send vendors related information.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    Fetch invoice batch for a vendor.\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    getPurchaseOrders\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    This web service returns Property management company vendors information and 1099 tax form data.\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    Pulls a list of VendorLocations\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    This web service will return pick list.\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    This service returns vendor records based on the vendorIds or vendorCodes provided.\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    Inserts invoice batch for a vendor.\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    This webservice allows you to update an existing invoice in Entrata.\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n    This webservice allows users to mark the AP Payments voided."
  },
  {
    "path": "https://gmhcommunities.entrata.com/api/v1/documentation/",
    "text": " API Documentation   \n\nAPI\n===\n\n[Code Snippet](/api/v1/documentation/code-snippet)\n\nSelect any of the web services below to view details and examples.\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n\nAPI\n===\n\nEntrata provides a number of web services in our integrations with various third-party applications. In order to provide clear, example-rich view of our API, we've documented many elements below. You are welcome to review the web service information provided and visit our [Code Snippet](/api/v1/documentation/code-snippet) section for examples and references detailing our web services in several programming languages.\n\nPlease note that unless stated otherwise, all dates and times used in the API are assumed to be in Mountain Time (MST or MDT).\n\nThe Accept-Language request header parameter can be used to request that the values returned in the response be translated into the language and locale that is desired, provided that the language is active and enabled for the client. Possible values are: \\[ en-US, en-CA, en-GB, es-MX, es-PE, hi-IN, zh-CN, en-IE, es-US, es-ES, fr-FR, es-CL \\].\n\n*   [API Health](#API_Health)\n    -------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getStatus](/api/v1/documentation/getStatus)\n    \n    This API will specify the API health status whether it is running or not.\n    \n*   [Applications](#Applications)\n    -----------------------------\n    \n    Provides a library of functions to retrieve or send applications.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getCompanyApplications](/api/v1/documentation/getCompanyApplications)\n    \n    [sendApplicantGeneralDetails](/api/v1/documentation/sendApplicantGeneralDetails)\n    \n    [sendApplication](/api/v1/documentation/sendApplication)\n    \n    This service will insert applications.\n    \n    [sendApplicationAddOns](/api/v1/documentation/sendApplicationAddOns)\n    \n    [sendApplicationEmployers](/api/v1/documentation/sendApplicationEmployers)\n    \n    [sendApplicationPets](/api/v1/documentation/sendApplicationPets)\n    \n    This service will insert or update the pets on an application. Please note that any applicable fees will also be applied based on the property fee structure.\n    \n    [sendApplicationVehicles](/api/v1/documentation/sendApplicationVehicles)\n    \n    Add Vehicle details to an application\n    \n    [updateApplication](/api/v1/documentation/updateApplication)\n    \n    This service allows users to update the application.\n    \n*   [AR Codes](#AR_Codes)\n    ---------------------\n    \n    Provides method to retrieve AR codes for a specified management company.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getArCodes](/api/v1/documentation/getArCodes)\n    \n    Returns all AR codes for a specified management company\n    \n*   [AR Payments](#AR_Payments)\n    ---------------------------\n    \n    Provides a library of functions to process electronic transactions.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getArPayments](/api/v1/documentation/getArPayments)\n    \n    Retrieves AR payments details with reference to a Payment ID and for a selected date range.\n    \n*   [AR Transactions](#AR_Transactions)\n    -----------------------------------\n    \n    Provides a library of functions to retrieve or send resident transactions.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getArInvoices](/api/v1/documentation/getArInvoices)\n    \n    This API is to get the information of Ar Invoices along with transactions and payments.\n    \n    [getLeaseArTransactions](/api/v1/documentation/getLeaseArTransactions)\n    \n    Retrieves a list of all transactions for a given lease\n    \n    [getMitsLeaseArTransactions](/api/v1/documentation/getMitsLeaseArTransactions)\n    \n    Retrieves list of all transactions for a given lease.\n    \n    [sendLeaseArTransactionReversals](/api/v1/documentation/sendLeaseArTransactionReversals)\n    \n    [sendLeaseArTransactions](/api/v1/documentation/sendLeaseArTransactions)\n    \n    Inserts lease AR transaction charges.\n    \n*   [Communications](#Communications)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getMarketingPreferencePickList](/api/v1/documentation/getMarketingPreferencePickList)\n    \n    [getMarketingPreferences](/api/v1/documentation/getMarketingPreferences)\n    \n    Pulls the marketing contact type preferences for a customer and what they have opted in or out of. Note that for SMS, if the customer does not have a mobile number entered Entrata, no SMS preferences will be returned.\n    \n*   [Customers](#Customers)\n    -----------------------\n    \n    Provides a library of functions to retrieve or send customers information.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getCustomers](/api/v1/documentation/getCustomers)\n    \n    Retrieves list of customers for a property. By default, this webservice returns residents where their lease status is Current or Notice.\n    \n    [getCustomerTestimonials](/api/v1/documentation/getCustomerTestimonials)\n    \n    Retrieves list of customer testimonials for a property.\n    \n    [getTestimonialPickLists](/api/v1/documentation/getTestimonialPickLists)\n    \n    Pick lists for Testimonials\n    \n    [searchCustomers](/api/v1/documentation/searchCustomers)\n    \n    Searches customers for a property.\n    \n    [sendCustomerTestimonials](/api/v1/documentation/sendCustomerTestimonials)\n    \n    Inserts resident reviews and ratings.\n    \n    [updateCustomers](/api/v1/documentation/updateCustomers)\n    \n    This service allows the user to update a customers' basic information. Requires the customer's lease status to be at least Applicant or above.\n    \n    [updateCustomerTestimonials](/api/v1/documentation/updateCustomerTestimonials)\n    \n    updateCustomerTestimonials\n    \n    [updatePropertyResponse](/api/v1/documentation/updatePropertyResponse)\n    \n*   [Financial](#Financial)\n    -----------------------\n    \n    Provides a library of functions to retrieve or send financial information.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getApCodes](/api/v1/documentation/getApCodes)\n    \n    This service will fetch job cost codes.\n    \n    [getBankAccounts](/api/v1/documentation/getBankAccounts)\n    \n    retrieve bank accounts for particular management company.\n    \n    [getBudgetActuals](/api/v1/documentation/getBudgetActuals)\n    \n    [getBudgets](/api/v1/documentation/getBudgets)\n    \n    API pull's details of the budget from Entrata.\n    \n    [getFinancialPickList](/api/v1/documentation/getFinancialPickList)\n    \n    financial picklist\n    \n    [getGlTransactions](/api/v1/documentation/getGlTransactions)\n    \n    Returns all GL transactions for a property. By default the webservice returns summarized transactions.\n    \n    [getGlTrees](/api/v1/documentation/getGlTrees)\n    \n    Retrieves GL accounts information.\n    \n    [getJobCategories](/api/v1/documentation/getJobCategories)\n    \n    This service will fetch job categories\n    \n    [getJobCostBudgets](/api/v1/documentation/getJobCostBudgets)\n    \n    This service will fetch job cost budgets.\n    \n    [getJobs](/api/v1/documentation/getJobs)\n    \n    Returns the job details added on the jobCosting\n    \n    [getTransactionTagLists](/api/v1/documentation/getTransactionTagLists)\n    \n    Returns the transactionCustomTags and transactionRoutingTags\n    \n    [markGlTransactionsExported](/api/v1/documentation/markGlTransactionsExported)\n    \n    Marks the provided GL transactions as exported under the API export type. Does not impact being able to export the same transactions in other export types using other Entrata GL Export formats.\n    \n    [sendBudgets](/api/v1/documentation/sendBudgets)\n    \n    [sendJournalEntries](/api/v1/documentation/sendJournalEntries)\n    \n    Inserts the Journal Entries.\n    \n    [updateBudgets](/api/v1/documentation/updateBudgets)\n    \n*   [Leads](#Leads)\n    ---------------\n    \n    Provides a library of functions to retrieve or send leads information.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [applyQuote](/api/v1/documentation/applyQuote)\n    \n    Apply quote to the application\n    \n    [generateQuotes](/api/v1/documentation/generateQuotes)\n    \n    Generates quotes for the application.\n    \n    [getLeadEvents](/api/v1/documentation/getLeadEvents)\n    \n    [getLeadPickLists](/api/v1/documentation/getLeadPickLists)\n    \n    Pulls a list of Ids required for other lead services\n    \n    [getLeads](/api/v1/documentation/getLeads)\n    \n    [getMitsLeads](/api/v1/documentation/getMitsLeads)\n    \n    Retrieves a list of leads of all status types. This web service uses Lead Management 3.0 MITS specifications.\n    \n    [getQuotes](/api/v1/documentation/getQuotes)\n    \n    Retrieves a list of prospect quotes from Entrata.\n    \n    [sendLeads](/api/v1/documentation/sendLeads)\n    \n    Inserts new Guest Card.\n    \n    [sendMitsLeads](/api/v1/documentation/sendMitsLeads)\n    \n    Inserts new Guest Cards. This web service uses Lead Management 3.0 MITS specifications. Please note that this service is being replaced by the sendLeads API and will eventually not be supported by Entrata.\n    \n    [updateLeads](/api/v1/documentation/updateLeads)\n    \n    It is use to update the lead.\n    \n*   [Leases](#Leases)\n    -----------------\n    \n    Provides a library of functions to retrieve or send leases information.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [cancelLease](/api/v1/documentation/cancelLease)\n    \n    Cancelling a lease which is in future status with unit and unit spaces associated with it.\n    \n    [getEvictedLeases](/api/v1/documentation/getEvictedLeases)\n    \n    [getExpiringLeases](/api/v1/documentation/getExpiringLeases)\n    \n    Returns a list of expiring leases\n    \n    [getLeaseDetails](/api/v1/documentation/getLeaseDetails)\n    \n    [getLeaseDocuments](/api/v1/documentation/getLeaseDocuments)\n    \n    Pulls list of lease documents.\n    \n    [getLeaseDocumentsList](/api/v1/documentation/getLeaseDocumentsList)\n    \n    Pulls the list of lease documents.\n    \n    [getLeasePickList](/api/v1/documentation/getLeasePickList)\n    \n    Pulls a list of Ids required for other leases services\n    \n    [getLeases](/api/v1/documentation/getLeases)\n    \n    Retrieves lease or application information. By default, this webservice returns leases that are in Current and Notice lease status. This endpoint is paginated, for pagination details check the response headers.\n    \n    [getMitsCollections](/api/v1/documentation/getMitsCollections)\n    \n    Retrieves the collection data.\n    \n    [getMitsLeases](/api/v1/documentation/getMitsLeases)\n    \n    Retrieves lease or application information.This web service uses Lease/Application 3.0 MITS specifications. By default, this webservice returns leases which are in Current and Notice lease status.\n    \n    [getParcelAlerts](/api/v1/documentation/getParcelAlerts)\n    \n    web service will return active as well as inactive packages.\n    \n    [getRentersInsurancePolicies](/api/v1/documentation/getRentersInsurancePolicies)\n    \n    [moveInLease](/api/v1/documentation/moveInLease)\n    \n    [moveOutLease](/api/v1/documentation/moveOutLease)\n    \n    moveOutLease\n    \n    [onNoticeLease](/api/v1/documentation/onNoticeLease)\n    \n    onNoticeLease\n    \n    [sendLeaseActivities](/api/v1/documentation/sendLeaseActivities)\n    \n    [sendLeaseDocuments](/api/v1/documentation/sendLeaseDocuments)\n    \n    This API can be used to upload documents onto Entrata leases such as application, lease, policy, agreement documents. This API accepts files as a form file upload and the Content-Type should be \"multipart/form-data\". Please see the \"Code Snippet\" tab for more technical details and some sample code examples.\n    \n    [sendLeases](/api/v1/documentation/sendLeases)\n    \n    [sendRentersInsurancePolicies](/api/v1/documentation/sendRentersInsurancePolicies)\n    \n    [sendRoommateGroups](/api/v1/documentation/sendRoommateGroups)\n    \n    To insert the roommate groups.\n    \n    [sendScheduledCharges](/api/v1/documentation/sendScheduledCharges)\n    \n    sendScheduledCharges\n    \n    [updateLease](/api/v1/documentation/updateLease)\n    \n    This service allows the user to update the lease's basic required information and occupants.\n    \n    [updateScheduledCharges](/api/v1/documentation/updateScheduledCharges)\n    \n    updateScheduledCharges\n    \n*   [Leasing Center](#Leasing_Center)\n    ---------------------------------\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getCallLogs](/api/v1/documentation/getCallLogs)\n    \n    [getLeasingCenterPickLists](/api/v1/documentation/getLeasingCenterPickLists)\n    \n*   [Maintenance](#Maintenance)\n    ---------------------------\n    \n    Provides a library of functions to retrieve or send work orders (maintenance requests) related information.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getInspections](/api/v1/documentation/getInspections)\n    \n    [getInspectionTemplates](/api/v1/documentation/getInspectionTemplates)\n    \n    We are fetching inspection templates based on the input provided in the request.\n    \n    [getWorkOrderPickLists](/api/v1/documentation/getWorkOrderPickLists)\n    \n    Pulls a list of Ids required for other workorder services\n    \n    [getWorkOrders](/api/v1/documentation/getWorkOrders)\n    \n    Retrieves work orders information.\n    \n    [sendWorkOrders](/api/v1/documentation/sendWorkOrders)\n    \n    Inserts new work orders.\n    \n    [updateWorkOrders](/api/v1/documentation/updateWorkOrders)\n    \n    Update the work orders.\n    \n*   [Pricing](#Pricing)\n    -------------------\n    \n    Provides a library of functions for retrieving pricing related information.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getPricingPicklists](/api/v1/documentation/getPricingPicklists)\n    \n    Retrieves picklist of id/name for the \"CASCADE\", \"ORIGIN\" and \"TRIGGER\" from the company.\n    \n    [insertPricing](/api/v1/documentation/insertPricing)\n    \n    insertPricing allows updating pricing at a different level with multiple combinations. All nodes create a number of combinations and depending on the property setup API accepts the data. E.g If the property has the setup to accept term wise pricing then only API can accept the allowed terms under the node \"leaseTermMonths\". Please note that this API is designed for Conventional property type and may not work for other property types.\n    \n    [sendBudgetedRent](/api/v1/documentation/sendBudgetedRent)\n    \n    sendBudgetedRent insert rates for unavailable units.\n    \n*   [Properties](#Properties)\n    -------------------------\n    \n    Provides a library of functions to retrieve property related information.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getAmenityReservations](/api/v1/documentation/getAmenityReservations)\n    \n    getAmenityReservations\n    \n    [getCalendarAvailability](/api/v1/documentation/getCalendarAvailability)\n    \n    This API pulls information about the property calendar such as general staff and tour hours of operation, allowed length of appointments, and provides the open calendar time slots as per the dates.\n    \n    [getFloorPlans](/api/v1/documentation/getFloorPlans)\n    \n    Retrieves list of floor plans for a property.\n    \n    [getPetTypes](/api/v1/documentation/getPetTypes)\n    \n    Pulls a list of Pet types\n    \n    [getPhoneNumber](/api/v1/documentation/getPhoneNumber)\n    \n    [getProperties](/api/v1/documentation/getProperties)\n    \n    Retrieves properties details for the management company.\n    \n    [getPropertyAddOns](/api/v1/documentation/getPropertyAddOns)\n    \n    [getPropertyAnnouncements](/api/v1/documentation/getPropertyAnnouncements)\n    \n    Retrieves announcements associated to property.\n    \n    [getPropertyPickLists](/api/v1/documentation/getPropertyPickLists)\n    \n    Version R2 for getPropertyPickLists. Converted the parameters from attribute to Nodes.\n    \n    [getRentableItems](/api/v1/documentation/getRentableItems)\n    \n    Retrieves list of rentable items for a property.\n    \n    [getReservableAmenities](/api/v1/documentation/getReservableAmenities)\n    \n    getReservableAmenities\n    \n    [getWebsites](/api/v1/documentation/getWebsites)\n    \n    getWebSites\n    \n    [sendFloorplans](/api/v1/documentation/sendFloorplans)\n    \n    Insert the floorplans\n    \n    [sendRentableItems](/api/v1/documentation/sendRentableItems)\n    \n    To insert the Rentable Items in to Entrata\n    \n*   [Property Units](#Property_Units)\n    ---------------------------------\n    \n    Provides a library of functions to retrieve or send all property units related information.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getAmenities](/api/v1/documentation/getAmenities)\n    \n    Pulls a list of Amenities\n    \n    [getMitsPropertyUnits](/api/v1/documentation/getMitsPropertyUnits)\n    \n    Retrieves property, floorplans, unit types, units, unit availability and pricing etc. information. This web service uses Property Marketing 3.0 MITS specifications. NOTE: For new projects, please do not use this service and instead use \"getPropertyUnits\" which is the updated version of this service but no longer supports the MITS standards.\n    \n    [getPropertyUnits](/api/v1/documentation/getPropertyUnits)\n    \n    Retrieves property, floorplans, unit types, units, unit availability and pricing, etc. information. If the property requested is a parent property with related child or phased properties then those properties will be found in subsequent pages and can be requested using the page specific URLs provided in the response headers.\n    \n    [getSpecials](/api/v1/documentation/getSpecials)\n    \n    Pulls a Specials/Concessions for the property passed.\n    \n    [getUnitsAvailabilityAndPricing](/api/v1/documentation/getUnitsAvailabilityAndPricing)\n    \n    Pulls a list of Unit availability and their pricing\n    \n    [getUnitTypes](/api/v1/documentation/getUnitTypes)\n    \n    Pulls a list of unit types. Rates returned are both active and web visible.\n    \n    [sendAmenities](/api/v1/documentation/sendAmenities)\n    \n    Insert the amenities.\n    \n    [sendPropertyUnits](/api/v1/documentation/sendPropertyUnits)\n    \n    Insert the property units/unit space and other the required details.\n    \n    [updateAmenities](/api/v1/documentation/updateAmenities)\n    \n    This service allows user to update the amenities (property/floorplan/unit type/unit space).\n    \n*   [Queue](#Queue)\n    ---------------\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getResponse](/api/v1/documentation/getResponse)\n    \n    This service will return the data of the report. For 'queueId' user needs to execute the getReportData(r3) API.\n    \n*   [Reports](#Reports)\n    -------------------\n    \n    Provides a library of functions to retrieve reports.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getDependentFilter](/api/v1/documentation/getDependentFilter)\n    \n    [getReportData](/api/v1/documentation/getReportData)\n    \n    This webservice will return 'queueId' that will be used in the getReponse API to pull the data for a specific report. Please use the getReportInfo webservice to get all the filters for a report. In order to run this webservice, you will have to provide the reportName along with all the filters for a report.\n    \n    [getReportInfo](/api/v1/documentation/getReportInfo)\n    \n    Returns information about a specific report. This will also return information about various filters associated with a report.\n    \n    [getReportList](/api/v1/documentation/getReportList)\n    \n    This webservice returns list of all reports that are available for the reports API. This webservice will return the report name along with the system report name. Using the value from reportName field you will be able to get all the details about this report using the getReportInfo webservice.\n    \n*   [Vendors](#Vendors)\n    -------------------\n    \n    Provides a library of functions to retrieve or send vendors related information.\n    \n    [](javascript:void\\(0\\);)\n    \n    Method\n    \n    Description\n    \n    [getInvoices](/api/v1/documentation/getInvoices)\n    \n    Fetch invoice batch for a vendor.\n    \n    [getPoReceivingRecords](/api/v1/documentation/getPoReceivingRecords)\n    \n    [getPurchaseOrders](/api/v1/documentation/getPurchaseOrders)\n    \n    getPurchaseOrders\n    \n    [getTaxFormData](/api/v1/documentation/getTaxFormData)\n    \n    This web service returns Property management company vendors information and 1099 tax form data.\n    \n    [getVendorLocations](/api/v1/documentation/getVendorLocations)\n    \n    Pulls a list of VendorLocations\n    \n    [getVendorPickLists](/api/v1/documentation/getVendorPickLists)\n    \n    This web service will return pick list.\n    \n    [getVendors](/api/v1/documentation/getVendors)\n    \n    This service returns vendor records based on the vendorIds or vendorCodes provided.\n    \n    [markInvoicesExported](/api/v1/documentation/markInvoicesExported)\n    \n    [sendInvoices](/api/v1/documentation/sendInvoices)\n    \n    Inserts invoice batch for a vendor.\n    \n    [sendPurchaseOrders](/api/v1/documentation/sendPurchaseOrders)\n    \n    [sendVendors](/api/v1/documentation/sendVendors)\n    \n    [updateInvoices](/api/v1/documentation/updateInvoices)\n    \n    This webservice allows you to update an existing invoice in Entrata.\n    \n    [updateVendors](/api/v1/documentation/updateVendors)\n    \n    [voidApPayments](/api/v1/documentation/voidApPayments)\n    \n    This webservice allows users to mark the AP Payments voided."
  }
]